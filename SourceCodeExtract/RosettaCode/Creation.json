{"isSuccess":true,"url":"http://rosettacode.org//wiki/Associative_array/Creation","codeArray":["var assoc = {};\nassoc['foo'] = 'bar';\nassoc['another-key'] = 3;\n// dot notation can be used if the property name is a valid identifier\nassoc.thirdKey = 'we can also do this!';\nassoc[2] = \"the index here is the string '2'\";\n//using JavaScript's object literal notation\nvar assoc = {\n    foo: 'bar',\n    'another-key': 3 //the key can either be enclosed by quotes or not\n};\n//iterating keys\nfor (var key in assoc) {\n    // hasOwnProperty() method ensures the property isn't inherited\n    if (assoc.hasOwnProperty(key)) {\n        alert('key:\"' + key + '\", value:\"' + assoc[key] + '\"');\n    }\n}","var map = new Map(),\n    fn = function() {},\n    obj = {};\nmap.set(fn, 123);\nmap.set(obj, 'abc');\nmap.set('key', 'val');\nmap.set(3, x => x + x);\nmap.get(fn); //=> 123\nmap.get(function() {}); //=> undefined because not the same function\nmap.get(obj); //=> 'abc'\nmap.get({}); //=> undefined because not the same object\nmap.get('key'); //=> 'val'\nmap.get(3); //=> (x => x + x)\nmap.size; //=> 4\n//iterating using ES6 for..of syntax\nfor (var key of map.keys()) {\n    console.log(key + ' => ' + map.get(key));\n}"],"uncertainCodeArray":[],"textArray":[]}