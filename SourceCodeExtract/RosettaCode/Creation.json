{"isSuccess":true,"url":"http://rosettacode.org//wiki/Associative_array/Creation","codeArray":["var assoc = {};\n  assoc['foo'] = 'bar';\n  assoc['another-key'] = 3;\n  // dot notation can be used if the property name is a valid identifier\n  assoc.thirdKey = 'we can also do this!';\n  assoc[2] = \"the index here is the string '2'\";\n  //using JavaScript's object literal notation\n  var assoc = {\n    foo: 'bar',\n    'another-key': 3 //the key can either be enclosed by quotes or not\n  };\n  //iterating keys\n  for (var key in assoc) {\n    // hasOwnProperty() method ensures the property isn't inherited\n    if (assoc.hasOwnProperty(key)) {\n      alert('key:\"' + key + '\", value:\"' + assoc[key] + '\"');\n    }\n  }var map = new Map(),\n      fn = function () {},\n      obj = {};\n  map.set(fn, 123);\n  map.set(obj, 'abc');\n  map.set('key', 'val');\n  map.set(3, x => x + x);\n  map.get(fn); //=> 123\n  map.get(function () {}); //=> undefined because not the same function\n  map.get(obj); //=> 'abc'\n  map.get({}); //=> undefined because not the same object\n  map.get('key'); //=> 'val'\n  map.get(3); //=> (x => x + x)\n  map.size; //=> 4\n  //iterating using ES6 for..of syntax\n  for (var key of map.keys()) {\n    console.log(key + ' => ' + map.get(key));\n  }"],"uncertainCodeArray":[],"textArray":[]}