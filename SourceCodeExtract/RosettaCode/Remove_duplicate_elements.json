{"isSuccess":true,"url":"http://rosettacode.org//wiki/Remove_duplicate_elements","codeArray":["function unique(ary) {\n    // concat() with no args is a way to clone an array\n    var u = ary.concat().sort();\n    for (var i = 1; i < u.length;) {\n        if (u[i - 1] === u[i])\n            u.splice(i, 1);\n        else\n            i++;\n    }\n    return u;\n}\nvar ary = [1, 2, 3, \"a\", \"b\", \"c\", 2, 3, 4, \"b\", \"c\", \"d\", \"4\"];\nvar uniq = unique(ary);\nfor (var i = 0; i < uniq.length; i++)\n    print(uniq[i] + \"\\t\" + typeof(uniq[i]));","Array.prototype.unique = function() {\n    var u = this.concat().sort();\n    for (var i = 1; i < u.length;) {\n        if (u[i - 1] === u[i])\n            u.splice(i, 1);\n        else\n            i++;\n    }\n    return u;\n}\nvar uniq = [1, 2, 3, \"a\", \"b\", \"c\", 2, 3, 4, \"b\", \"c\", \"d\"].unique();","Array.prototype.unique = function() {\n    return this.sort().reduce((a, e) => e === a[a.length - 1] ? a : (a.push(e), a), [])\n}","Array.prototype.unique = function() {\n    return [...new Set(this)]\n}","function uniq(lst) {\n    var u = [],\n        dct = {},\n        i = lst.length,\n        v;\n    while (i--) {\n        v = lst[i], dct[v] || (\n            dct[v] = u.push(v)\n        );\n    }\n    u.sort(); // optional\n    return u;\n}","(function() {\n    'use strict';\n    // nub :: [a] -> [a]\n    function nub(xs) {\n        // Eq :: a -> a -> Bool\n        function Eq(a, b) {\n            return a === b;\n        }\n        // nubBy :: (a -> a -> Bool) -> [a] -> [a]\n        function nubBy(fnEq, xs) {\n            var x = xs.length ? xs[0] : undefined;\n            return x !== undefined ? [x].concat(\n                nubBy(fnEq, xs.slice(1)\n                    .filter(function(y) {\n                        return !fnEq(x, y);\n                    }))\n            ) : [];\n        }\n        return nubBy(Eq, xs);\n    }\n    // TEST\n    return [\n        nub('4 3 2 8 0 1 9 5 1 7 6 3 9 9 4 2 1 5 3 2'.split(' '))\n        .map(function(x) {\n            return Number(x);\n        }),\n        nub('chthonic eleemosynary paronomasiac'.split(''))\n        .join('')\n    ]\n})();"],"uncertainCodeArray":[],"textArray":[]}