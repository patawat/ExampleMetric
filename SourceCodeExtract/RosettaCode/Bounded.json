{"isSuccess":true,"url":"http://rosettacode.org//wiki/Knapsack_problem/Bounded","codeArray":["<html><head><title></title></head><body></body></html>\n  <script type=\"text/javascript\">\n  var data= [\n    {name: 'map',                    weight:  9, value:150, pieces:1},\n    {name: 'compass',                weight: 13, value: 35, pieces:1},\n    {name: 'water',                  weight:153, value:200, pieces:2},\n    {name: 'sandwich',               weight: 50, value: 60, pieces:2},\n    {name: 'glucose',                weight: 15, value: 60, pieces:2},\n    {name: 'tin',                    weight: 68, value: 45, pieces:3},\n    {name: 'banana',                 weight: 27, value: 60, pieces:3},\n    {name: 'apple',                  weight: 39, value: 40, pieces:3},\n    {name: 'cheese',                 weight: 23, value: 30, pieces:1},\n    {name: 'beer',                   weight: 52, value: 10, pieces:3},\n    {name: 'suntan, cream',          weight: 11, value: 70, pieces:1},\n    {name: 'camera',                 weight: 32, value: 30, pieces:1},\n    {name: 'T-shirt',                weight: 24, value: 15, pieces:2},\n    {name: 'trousers',               weight: 48, value: 10, pieces:2},\n    {name: 'umbrella',               weight: 73, value: 40, pieces:1},\n    {name: 'waterproof, trousers',   weight: 42, value: 70, pieces:1},\n    {name: 'waterproof, overclothes',weight: 43, value: 75, pieces:1},\n    {name: 'note-case',              weight: 22, value: 80, pieces:1},\n    {name: 'sunglasses',             weight:  7, value: 20, pieces:1},\n    {name: 'towel',                  weight: 18, value: 12, pieces:2},\n    {name: 'socks',                  weight:  4, value: 50, pieces:1},\n    {name: 'book',                   weight: 30, value: 10, pieces:2}\n  ];\n  function findBestPack() {\n  \tvar m= [[0]]; // maximum pack value found so far\n  \tvar b= [[0]]; // best combination found so far\n  \tvar opts= [0]; // item index for 0 of item 0 \n  \tvar P= [1]; // item encoding for 0 of item 0\n  \tvar choose= 0;\n  \tfor (var j= 0; j<data.length; j++) {\n  \t\topts[j+1]= opts[j]+data[j].pieces; // item index for 0 of item j+1\n  \t\tP[j+1]= P[j]*(1+data[j].pieces); // item encoding for 0 of item j+1\n  \t}\n  \tfor (var j= 0; j<opts[data.length]; j++) {\n  \t\tm[0][j+1]= b[0][j+1]= 0; // best values and combos for empty pack: nothing\n  \t}\n  \tfor (var w=1; w<=400; w++) {\n  \t\tm[w]= [0];\n  \t\tb[w]= [0];\n  \t\tfor (var j=0; j<data.length; j++) {\n  \t\t\tvar N= data[j].pieces; // how many of these can we have?\n  \t\t\tvar base= opts[j]; // what is the item index for 0 of these?\n  \t\t\tfor (var n= 1; n<=N; n++) {\n  \t\t\t\tvar W= n*data[j].weight; // how much do these items weigh?\n  \t\t\t\tvar s= w>=W ?1 :0; // can we carry this many?\n  \t\t\t\tvar v= s*n*data[j].value; // how much are they worth?\n  \t\t\t\tvar I= base+n; // what is the item number for this many?\n  \t\t\t\tvar wN= w-s*W; // how much other stuff can we be carrying?\n  \t\t\t\tvar C= n*P[j] + b[wN][base]; // encoded combination\n  \t\t\t\tm[w][I]= Math.max(m[w][I-1], v+m[wN][base]); // best value\n  \t\t\t\tchoose= b[w][I]= m[w][I]>m[w][I-1] ?C :b[w][I-1];\n  \t\t\t}\n  \t\t}\n  \t}\n  \tvar best= [];\n  \tfor (var j= data.length-1; j>=0; j--) {\n  \t\tbest[j]= Math.floor(choose/P[j]);\n  \t\tchoose-= best[j]*P[j];\n  \t}\n  \tvar out='<table><tr><td><b>Count</b></td><td><b>Item</b></td><th>unit weight</th><th>unit value</th>';\n  \tvar wgt= 0;\n  \tvar val= 0;\n  \tfor (var i= 0; i<best.length; i++) {\n  \t\tif (0==best[i]) continue;\n  \t\tout+='</tr><tr><td>'+best[i]+'</td><td>'+data[i].name+'</td><td>'+data[i].weight+'</td><td>'+data[i].value+'</td>'\n  \t\twgt+= best[i]*data[i].weight;\n  \t\tval+= best[i]*data[i].value;\n  \t}\n  \tout+= '</tr></table><br/>Total weight: '+wgt;\n  \tout+= '<br/>Total value: '+val;\n  \tdocument.body.innerHTML= out;\n  }\n  findBestPack();\n  </script>"],"uncertainCodeArray":[],"textArray":[]}