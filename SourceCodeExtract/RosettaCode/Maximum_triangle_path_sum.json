{"isSuccess":true,"url":"http://rosettacode.org//wiki/Maximum_triangle_path_sum","codeArray":[" var arr = [\n  [55],\n  [94, 48],\n  [95, 30, 96],\n  [77, 71, 26, 67],\n  [97, 13, 76, 38, 45],\n  [07, 36, 79, 16, 37, 68],\n  [48, 07, 09, 18, 70, 26, 06],\n  [18, 72, 79, 46, 59, 79, 29, 90],\n  [20, 76, 87, 11, 32, 07, 07, 49, 18],\n  [27, 83, 58, 35, 71, 11, 25, 57, 29, 85],\n  [14, 64, 36, 96, 27, 11, 58, 56, 92, 18, 55],\n  [02, 90, 03, 60, 48, 49, 41, 46, 33, 36, 47, 23],\n  [92, 50, 48, 02, 36, 59, 42, 79, 72, 20, 82, 77, 42],\n  [56, 78, 38, 80, 39, 75, 02, 71, 66, 66, 01, 03, 55, 72],\n  [44, 25, 67, 84, 71, 67, 11, 61, 40, 57, 58, 89, 40, 56, 36],\n  [85, 32, 25, 85, 57, 48, 84, 35, 47, 62, 17, 01, 01, 99, 89, 52],\n  [06, 71, 28, 75, 94, 48, 37, 10, 23, 51, 06, 48, 53, 18, 74, 98, 15],\n  [27, 02, 92, 23, 08, 71, 76, 84, 15, 52, 92, 63, 81, 10, 44, 10, 69, 93]\n  ];\n  while (arr.length !== 1) {\n    var len = arr.length;\n    var row = [];\n    var current = arr[len-2];\n    var currentLen = current.length - 1;\n    var end = arr[len-1];\n    for ( var i = 0; i <= currentLen; i++ ) {\n      row.push(Math.max(current[i] + end[i] || 0, current[i] + end[i+1] || 0) )\n    }\n    arr.pop();\n    arr.pop();\n    arr.push(row);\n  }\n  console.log(arr);\n  [ [ 1320 ] ]\n  Â (function () {\n    // Right fold using final element as initial accumulator\n    // (a -> a -> a) -> t a -> a\n    function foldr1(f, lst) {\n      return lst.length > 1 ? (\n        f(lst[0], foldr1(f, lst.slice(1)))\n      ) : lst[0];\n    }\n    // function of arity 3 mapped over nth items of each of 3 lists\n    // (a -> b -> c -> d) -> [a] -> [b] -> [c] -> [d]\n    function zipWith3(f, xs, ys, zs) {\n      return zs.length ? [f(xs[0], ys[0], zs[0])].concat(\n        zipWith3(f, xs.slice(1), ys.slice(1), zs.slice(1))) : [];\n    }\n    // Evaluating from bottom up (right fold)\n    // and with recursion left to right (head and first item of tail at each stage)\n    return foldr1(\n      function (xs, ys) {\n        return zipWith3(\n          function (x, y, z) {\n            return x + (y < z ? z : y);\n          },\n          xs, ys, ys.slice(1) // item above, and larger of two below\n        );\n      }, [\n          [55],\n          [94, 48],\n          [95, 30, 96],\n          [77, 71, 26, 67],\n          [97, 13, 76, 38, 45],\n          [07, 36, 79, 16, 37, 68],\n          [48, 07, 09, 18, 70, 26, 06],\n          [18, 72, 79, 46, 59, 79, 29, 90],\n          [20, 76, 87, 11, 32, 07, 07, 49, 18],\n          [27, 83, 58, 35, 71, 11, 25, 57, 29, 85],\n          [14, 64, 36, 96, 27, 11, 58, 56, 92, 18, 55],\n          [02, 90, 03, 60, 48, 49, 41, 46, 33, 36, 47, 23],\n          [92, 50, 48, 02, 36, 59, 42, 79, 72, 20, 82, 77, 42],\n          [56, 78, 38, 80, 39, 75, 02, 71, 66, 66, 01, 03, 55, 72],\n          [44, 25, 67, 84, 71, 67, 11, 61, 40, 57, 58, 89, 40, 56, 36],\n          [85, 32, 25, 85, 57, 48, 84, 35, 47, 62, 17, 01, 01, 99, 89, 52],\n          [06, 71, 28, 75, 94, 48, 37, 10, 23, 51, 06, 48, 53, 18, 74, 98, 15],\n          [27, 02, 92, 23, 08, 71, 76, 84, 15, 52, 92, 63, 81, 10, 44, 10, 69, 93]\n      ]\n    )[0];\n  })();1320"],"uncertainCodeArray":[],"textArray":[]}