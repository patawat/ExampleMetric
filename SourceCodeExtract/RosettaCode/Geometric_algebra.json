{"isSuccess":true,"url":"http://rosettacode.org//wiki/Geometric_algebra","codeArray":["var GA = function () {\n      function e(n) {\n  \tvar result = [];\n  \tresult[1 << n] = 1;\n  \treturn result;\n      }\n      function cdot(a, b) { return mul([0.5], add(mul(a, b), mul(b, a))) }\n      function neg(x) { return mul([-1], x) }\n      function bitCount(i) {\n  \t// Note that unsigned shifting (>>>) is not required.\n  \ti = i - ((i >> 1) & 0x55555555);\n  \ti = (i & 0x33333333) + ((i >> 2) & 0x33333333);\n  \ti = (i + (i >> 4)) & 0x0F0F0F0F;\n  \ti = i + (i >> 8);\n  \ti = i + (i >> 16);\n  \treturn i & 0x0000003F;\n      }\n      function reorderingSign(a, b) {\n  \ta >>= 1;\n  \tvar sum = 0;\n  \twhile (a != 0) {\n  \t    sum += bitCount(a & b);\n  \t    a >>= 1;\n  \t}\n  \treturn (sum & 1) == 0 ? 1 : -1;\n      }\n      function add(a, b) {\n  \tvar result = a.slice(0);\n  \tfor (var i in b) {\n  \t    if (result[i]) {\n  \t\tresult[i] += b[i];\n  \t    } else {\n  \t\tresult[i] = b[i];\n  \t    }\n  \t}\n  \treturn result;\n      }\n      function mul(a, b)\n      {\n  \tvar result = [];\n  \tfor (var i in a) {\n  \t    if (a[i]) {\n  \t\tfor (var j in b) {\n  \t\t    if (b[j]) {\n  \t\t\tvar s = reorderingSign(i, j) * a[i] * b[j];\n  \t\t\t// if (i == 1 && j == 1) { s *= -1 }  // e0*e0 == -1\n  \t\t\tvar k = i ^ j;\n  \t\t\tif (result[k]) {\n  \t\t\t    result[k] += s;\n  \t\t\t} else {\n  \t\t\t    result[k] = s;\n  \t\t\t}\n  \t\t    }\n  \t\t}\n  \t    }\n  \t}\n  \treturn result;\n      }\n      return {\n  \te   : e,\n  \tcdot : cdot,\n  \tneg : neg,\n  \tadd : add,\n  \tmul : mul\n      };\n  }();var e = GA.e, cdot = GA.cdot;\n  for (var i = 0; i < 5; i++) {\n      for (var j = 0; j < 5; j++) {\n          if (i < j) {\n              if (cdot(e(i), e(j))[0]) { console.log(\"unexpected non-nul scalar product\"); }\n          } else if (i === j) {\n              if (!cdot(e(i), e(j))[0]) { console.log(\"unexpected nul scalar product\"); }\n          }\n      }\n  }\n  function randomVector() {\n      var result = [];\n      for (var i = 0; i < 5; i++) { result = GA.add( result, GA.mul([Math.random()], e(i))); }\n      return result;\n  }\n  function randomMultiVector() {\n      var result = [];\n      for (var i = 0; i < 32; i++) { result[i] = Math.random(); }\n      return result;\n  }\n  var a = randomMultiVector(), b = randomMultiVector(), c = randomMultiVector();\n  var x = randomVector();\n  // (ab)c == a(bc)\n  console.log(GA.mul(GA.mul(a, b), c));\n  console.log(GA.mul(a, GA.mul(b, c)));\n  // a(b + c) == ab + ac\n  console.log(GA.mul(a, GA.add(b, c)));\n  console.log(GA.add(GA.mul(a,b), GA.mul(a, c)));\n  // (a + b)c == ac + bc\n  console.log(GA.mul(GA.add(a, b), c));\n  console.log(GA.add(GA.mul(a,c), GA.mul(b, c)));\n  // xÂ² is real\n  console.log(GA.mul(x, x));"],"uncertainCodeArray":[],"textArray":[]}