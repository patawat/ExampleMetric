{"isSuccess":true,"url":"http://rosettacode.org//wiki/Geometric_algebra","codeArray":["var GA = function() {\n    function e(n) {\n        var result = [];\n        result[1 << n] = 1;\n        return result;\n    }\n\n    function cdot(a, b) {\n        return mul([0.5], add(mul(a, b), mul(b, a)))\n    }\n\n    function neg(x) {\n        return mul([-1], x)\n    }\n\n    function bitCount(i) {\n        // Note that unsigned shifting (>>>) is not required.\n        i = i - ((i >> 1) & 0x55555555);\n        i = (i & 0x33333333) + ((i >> 2) & 0x33333333);\n        i = (i + (i >> 4)) & 0x0F0F0F0F;\n        i = i + (i >> 8);\n        i = i + (i >> 16);\n        return i & 0x0000003F;\n    }\n\n    function reorderingSign(a, b) {\n        a >>= 1;\n        var sum = 0;\n        while (a != 0) {\n            sum += bitCount(a & b);\n            a >>= 1;\n        }\n        return (sum & 1) == 0 ? 1 : -1;\n    }\n\n    function add(a, b) {\n        var result = a.slice(0);\n        for (var i in b) {\n            if (result[i]) {\n                result[i] += b[i];\n            } else {\n                result[i] = b[i];\n            }\n        }\n        return result;\n    }\n\n    function mul(a, b) {\n        var result = [];\n        for (var i in a) {\n            if (a[i]) {\n                for (var j in b) {\n                    if (b[j]) {\n                        var s = reorderingSign(i, j) * a[i] * b[j];\n                        // if (i == 1 && j == 1) { s *= -1 }  // e0*e0 == -1\n                        var k = i ^ j;\n                        if (result[k]) {\n                            result[k] += s;\n                        } else {\n                            result[k] = s;\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    return {\n        e: e,\n        cdot: cdot,\n        neg: neg,\n        add: add,\n        mul: mul\n    };\n}();","var e = GA.e,\n    cdot = GA.cdot;\nfor (var i = 0; i < 5; i++) {\n    for (var j = 0; j < 5; j++) {\n        if (i < j) {\n            if (cdot(e(i), e(j))[0]) {\n                console.log(\"unexpected non-nul scalar product\");\n            }\n        } else if (i === j) {\n            if (!cdot(e(i), e(j))[0]) {\n                console.log(\"unexpected nul scalar product\");\n            }\n        }\n    }\n}\n\nfunction randomVector() {\n    var result = [];\n    for (var i = 0; i < 5; i++) {\n        result = GA.add(result, GA.mul([Math.random()], e(i)));\n    }\n    return result;\n}\n\nfunction randomMultiVector() {\n    var result = [];\n    for (var i = 0; i < 32; i++) {\n        result[i] = Math.random();\n    }\n    return result;\n}\nvar a = randomMultiVector(),\n    b = randomMultiVector(),\n    c = randomMultiVector();\nvar x = randomVector();\n// (ab)c == a(bc)\nconsole.log(GA.mul(GA.mul(a, b), c));\nconsole.log(GA.mul(a, GA.mul(b, c)));\n// a(b + c) == ab + ac\nconsole.log(GA.mul(a, GA.add(b, c)));\nconsole.log(GA.add(GA.mul(a, b), GA.mul(a, c)));\n// (a + b)c == ac + bc\nconsole.log(GA.mul(GA.add(a, b), c));\nconsole.log(GA.add(GA.mul(a, c), GA.mul(b, c)));\n// xÂ² is real\nconsole.log(GA.mul(x, x));"],"uncertainCodeArray":[],"textArray":[]}