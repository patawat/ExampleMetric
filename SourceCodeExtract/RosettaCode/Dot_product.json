{"isSuccess":true,"url":"http://rosettacode.org//wiki/Dot_product","codeArray":["function dot_product(ary1, ary2) {\n    if (ary1.length != ary2.length)\n        throw \"can't find dot product: arrays have different lengths\";\n    var dotprod = 0;\n    for (var i = 0; i < ary1.length; i++)\n        dotprod += ary1[i] * ary2[i];\n    return dotprod;\n}\nprint(dot_product([1, 3, -5], [4, -2, -1])); // ==> 3\nprint(dot_product([1, 3, -5], [4, -2, -1, 0])); // ==> exception","function dotp(x, y) {\n    function dotp_sum(a, b) {\n        return a + b;\n    }\n\n    function dotp_times(a, i) {\n        return x[i] * y[i];\n    }\n    if (x.length != y.length)\n        throw \"can't find dot product: arrays have different lengths\";\n    return x.map(dotp_times).reduce(dotp_sum, 0);\n}\ndotp([1, 3, -5], [4, -2, -1]); // ==> 3\ndotp([1, 3, -5], [4, -2, -1, 0]); // ==> exception","(function() {\n    'use strict';\n\n    function dotProduct(xs, ys) {\n        return sum(zipWith(product, xs, ys));\n    }\n    // [n] -> n\n    function sum(xs) {\n        return xs ? xs.reduce(function(a, x) {\n            return a + x;\n        }, 0) : undefined;\n    }\n    // n -> n -> n\n    function product(a, b) {\n        return a * b;\n    }\n    // (a -> b -> c) -> [a] -> [b] -> [c]\n    function zipWith(f, xs, ys) {\n        return xs.length === ys.length ? (\n            xs.map(function(x, i) {\n                return f(x, ys[i])\n            })\n        ) : undefined;\n    }\n    return dotProduct([1, 3, -5], [4, -2, -1]);\n})();"],"uncertainCodeArray":[],"textArray":[]}