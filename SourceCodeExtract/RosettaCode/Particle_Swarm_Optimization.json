{"isSuccess":true,"url":"http://rosettacode.org//wiki/Particle_Swarm_Optimization","codeArray":["function pso_init(y) {\n    var nDims = y.min.length;\n    var pos = [],\n        vel = [],\n        bpos = [],\n        bval = [];\n    for (var j = 0; j < y.nParticles; j++) {\n        pos[j] = bpos[j] = y.min;\n        var v = [];\n        for (var k = 0; k < nDims; k++) v[k] = 0;\n        vel[j] = v;\n        bval[j] = Infinity\n    }\n    return {\n        iter: 0,\n        gbpos: Infinity,\n        gbval: Infinity,\n        min: y.min,\n        max: y.max,\n        parameters: y.parameters,\n        pos: pos,\n        vel: vel,\n        bpos: bpos,\n        bval: bval,\n        nParticles: y.nParticles,\n        nDims: nDims\n    }\n}\n\nfunction pso(fn, state) {\n    var y = state;\n    var p = y.parameters;\n    var val = [],\n        bpos = [],\n        bval = [],\n        gbval = Infinity,\n        gbpos = [];\n    for (var j = 0; j < y.nParticles; j++) {\n        // evaluate\n        val[j] = fn.apply(null, y.pos[j]);\n        // update\n        if (val[j] < y.bval[j]) {\n            bpos[j] = y.pos[j];\n            bval[j] = val[j];\n        } else {\n            bpos[j] = y.bpos[j];\n            bval[j] = y.bval[j]\n        }\n        if (bval[j] < gbval) {\n            gbval = bval[j];\n            gbpos = bpos[j]\n        }\n    }\n    var rg = Math.random(),\n        vel = [],\n        pos = [];\n    for (var j = 0; j < y.nParticles; j++) {\n        // migrate\n        var rp = Math.random(),\n            ok = true;\n        vel[j] = [];\n        pos[j] = [];\n        for (var k = 0; k < y.nDims; k++) {\n            vel[j][k] = p.omega * y.vel[j][k] + p.phip * rp * (bpos[j] - y.pos[j]) + p.phig * rg * (gbpos - y.pos[j]);\n            pos[j][k] = y.pos[j] + vel[j][k];\n            ok = ok && y.min[k] < pos[j][k] && y.max > pos[j][k];\n        }\n        if (!ok)\n            for (var k = 0; k < y.nDims; k++)\n                pos[j][k] = y.min[k] + (y.max[k] - y.min[k]) * Math.random()\n    }\n    return {\n        iter: 1 + y.iter,\n        gbpos: gbpos,\n        gbval: gbval,\n        min: y.min,\n        max: y.max,\n        parameters: y.parameters,\n        pos: pos,\n        vel: vel,\n        bpos: bpos,\n        bval: bval,\n        nParticles: y.nParticles,\n        nDims: y.nDims\n    }\n}\n\nfunction display(text) {\n    if (document) {\n        var o = document.getElementById('o');\n        if (!o) {\n            o = document.createElement('pre');\n            o.id = 'o';\n            document.body.appendChild(o)\n        }\n        o.innerHTML += text + '\\n';\n        window.scrollTo(0, document.body.scrollHeight);\n    }\n    if (console.log) console.log(text)\n}\n\nfunction reportState(state) {\n    var y = state;\n    display('');\n    display('Iteration: ' + y.iter);\n    display('GlobalBestPosition: ' + y.gbpos);\n    display('GlobalBestValue: ' + y.gbval);\n}\n\nfunction repeat(fn, n, y) {\n    var r = y,\n        old = y;\n    if (Infinity == n)\n        while ((r = fn(r)) != old) old = r;\n    else\n        for (var j = 0; j < n; j++) r = fn(r);\n    return r\n}\n\nfunction mccormick(a, b) {\n    return Math.sin(a + b) + Math.pow(a - b, 2) + (1 + 2.5 * b - 1.5 * a)\n}\nstate = pso_init({\n    min: [-1.5, -3],\n    max: [4, 4],\n    parameters: {\n        omega: 0,\n        phip: 0.6,\n        phig: 0.3\n    },\n    nParticles: 100\n});\nreportState(state);\nstate = repeat(function(y) {\n    return pso(mccormick, y)\n}, 40, state);\nreportState(state);"," Iteration: 0\n GlobalBestPosition: Infinity\n GlobalBestValue: Infinity\n Iteration: 40\n GlobalBestPosition: -0.5134004259016365, -1.5512442672625184\n GlobalBestValue: -1.9114053788600853"],"uncertainCodeArray":[],"textArray":[]}