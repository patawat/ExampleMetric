{"isSuccess":true,"url":"http://rosettacode.org//wiki/Factorial","codeArray":["fac = (n) - > [1..n].reduce(x, y) - > x * y","function factorial(n) {\n    //check our edge case\n    if (n < 0) {\n        throw \"Number must be non-negative\";\n    }\n    var sum = 1;\n    //we skip zero and one since both are 1 and are identity\n    while (n > 1) {\n        sum *= n;\n        n -= 1;\n    }\n    return sum;\n}","(function(x) {\n    var memo = {};\n\n    function factorial(n) {\n        return n < 2 ? 1 : memo[n] || (memo[n] = n * factorial(n - 1));\n    }\n    return factorial(x);\n})(18);","6402373705728000","(function() {\n    'use strict';\n    // factorial :: Int -> Int\n    function factorial(x) {\n        return range(1, x)\n            .reduce(function(a, b) {\n                return a * b;\n            }, 1);\n    }\n    // range :: Int -> Int -> [Int]\n    function range(m, n) {\n        var a = Array(n - m + 1),\n            i = n + 1;\n        while (i-- > m) a[i - m] = i;\n        return a;\n    }\n    return factorial(18);\n})();","6402373705728000","var factorial = n => (n < 2) ? 1 : n * factorial(n - 1);"],"uncertainCodeArray":[],"textArray":[]}