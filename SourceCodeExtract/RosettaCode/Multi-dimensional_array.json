{"isSuccess":true,"url":"http://rosettacode.org//wiki/Multi-dimensional_array","codeArray":[" function array() {\n     var dimensions = Array.prototype.slice.call(arguments);\n     var N = 1,\n         rank = dimensions.length;\n     for (var j = 0; j < rank; j++) N *= dimensions[j];\n     this.dimensions = dimensions;\n     this.values = new Array(N);\n } <\n lang >\n     A routine to convert between single dimension indices and multi - dimensional indices can be useful here:\n     <\n     lang javascript >\n     function tobase(base, vals) {\n         var r = 0,\n             len = base.length;\n         for (j = 0; j < len; j++) {\n             r *= base[j];\n             r += vals[j];\n         }\n         return r;\n     }\n\n function frombase(base, val) {\n     var r = new Array(base.length);\n     for (j = base.length - 1; j >= 0; j--) {\n         r[j] = val % base[j];\n         val = (val - r[j]) / base[j];\n     }\n     return r;\n }"," array.prototype.index = function() {\n     var indices = Array.prototype.slice.call(arguments);\n     return this.values[tobase(this.dimensions, indices)];\n }"," a = new array(6, 7, 8, 9);\n a.index(2, 3, 5, 6);"," function array(length) {\n     var rest = Array.prototype.slice.call(arguments);\n     var r = new Array(length);\n     if (0 < rest.length) {\n         for (var j = 0; j < length; j++) {\n             r[j] = array.apply(rest);\n         }\n     }\n }"],"uncertainCodeArray":[],"textArray":[]}