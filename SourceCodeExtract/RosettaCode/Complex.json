{"isSuccess":true,"url":"http://rosettacode.org//wiki/Arithmetic/Complex","codeArray":["function Complex(r, i) {\n  \tthis.r = r;\n  \tthis.i = i;\n  }\n  Complex.add = function() {\n  \tvar num = arguments[0];\n  \tfor(var i = 1, ilim = arguments.length; i < ilim; i += 1){\n  \t\tnum.r += arguments[i].r;\n  \t\tnum.i += arguments[i].i;\n  \t}\n  \treturn num;\n  }\n  Complex.multiply = function() {\n  \tvar num = arguments[0];\n  \tfor(var i = 1, ilim = arguments.length; i < ilim; i += 1){\n  \t\tnum.r = (num.r * arguments[i].r) - (num.i * arguments[i].i);\n  \t\tnum.i = (num.i * arguments[i].r) - (num.r * arguments[i].i);\n  \t}\n  \treturn num;\n  }\n  Complex.negate = function (z) {\n  \treturn new Complex(-1*z.r, -1*z.i);\n  }\n  Complex.invert = function(z) {\n  \tvar denom = Math.pow(z.r,2) + Math.pow(z.i,2);\n  \treturn new Complex(z.r/denom, -1*z.i/denom);\n  }\n  Complex.conjugate = function(z) {\n  \treturn new Complex(z.r, -1*z.i);\n  }\n  // BONUSES!\n  Complex.prototype.toString = function() {\n  \treturn this.r === 0 && this.i === 0\n            ? \"0\"\n            : (this.r !== 0 ? this.r : \"\") \n            + ((this.r !== 0 || this.i < 0) && this.i !== 0 \n                ? (this.i > 0 ? \"+\" : \"-\") \n                : \"\" ) + ( this.i !== 0 ? Math.abs(this.i) + \"i\" : \"\" ); \n  }\n  Complex.prototype.getMod = function() {\n  \treturn Math.sqrt( Math.pow(this.r,2) , Math.pow(this.i,2) )\n  }"],"uncertainCodeArray":[],"textArray":[]}