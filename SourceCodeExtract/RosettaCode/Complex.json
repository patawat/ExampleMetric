{"isSuccess":true,"url":"http://rosettacode.org//wiki/Arithmetic/Complex","codeArray":["function Complex(r, i) {\n    this.r = r;\n    this.i = i;\n}\nComplex.add = function() {\n    var num = arguments[0];\n    for (var i = 1, ilim = arguments.length; i < ilim; i += 1) {\n        num.r += arguments[i].r;\n        num.i += arguments[i].i;\n    }\n    return num;\n}\nComplex.multiply = function() {\n    var num = arguments[0];\n    for (var i = 1, ilim = arguments.length; i < ilim; i += 1) {\n        num.r = (num.r * arguments[i].r) - (num.i * arguments[i].i);\n        num.i = (num.i * arguments[i].r) - (num.r * arguments[i].i);\n    }\n    return num;\n}\nComplex.negate = function(z) {\n    return new Complex(-1 * z.r, -1 * z.i);\n}\nComplex.invert = function(z) {\n    var denom = Math.pow(z.r, 2) + Math.pow(z.i, 2);\n    return new Complex(z.r / denom, -1 * z.i / denom);\n}\nComplex.conjugate = function(z) {\n        return new Complex(z.r, -1 * z.i);\n    }\n    // BONUSES!\nComplex.prototype.toString = function() {\n    return this.r === 0 && this.i === 0 ?\n        \"0\" :\n        (this.r !== 0 ? this.r : \"\") +\n        ((this.r !== 0 || this.i < 0) && this.i !== 0 ?\n            (this.i > 0 ? \"+\" : \"-\") :\n            \"\") + (this.i !== 0 ? Math.abs(this.i) + \"i\" : \"\");\n}\nComplex.prototype.getMod = function() {\n    return Math.sqrt(Math.pow(this.r, 2), Math.pow(this.i, 2))\n}"],"uncertainCodeArray":[],"textArray":[]}