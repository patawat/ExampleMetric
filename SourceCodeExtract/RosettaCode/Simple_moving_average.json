{"isSuccess":true,"url":"http://rosettacode.org//wiki/Averages/Simple_moving_average","codeArray":["function simple_moving_averager(period) {\n      var nums = [];\n      return function(num) {\n          nums.push(num);\n          if (nums.length > period)\n              nums.splice(0,1);  // remove the first element of the array\n          var sum = 0;\n          for (var i in nums)\n              sum += nums[i];\n          var n = period;\n          if (nums.length < period)\n              n = nums.length;\n          return(sum/n);\n      }\n  }\n  var sma3 = simple_moving_averager(3);\n  var sma5 = simple_moving_averager(5);\n  var data = [1,2,3,4,5,5,4,3,2,1];\n  for (var i in data) {\n      var n = data[i];\n      // using WSH\n      WScript.Echo(\"Next number = \" + n + \", SMA_3 = \" + sma3(n) + \", SMA_5 = \" + sma5(n));\n  }// single-sided\n  Array.prototype.simpleSMA=function(N) {\n  return this.map(\n    function(el,index, _arr) { \n        return _arr.filter(\n        function(x2,i2) { \n          return i2 <= index && i2 > index - N;\n          })\n        .reduce(\n        function(current, last, index, arr){ \n          return (current + last); \n          })/index || 1;\n        }); \n  };\n  g=[0,1,2,3,4,5,6,7,8,9,10];\n  console.log(g.simpleSMA(3));\n  console.log(g.simpleSMA(5));\n  console.log(g.simpleSMA(g.length));"],"uncertainCodeArray":[],"textArray":[]}