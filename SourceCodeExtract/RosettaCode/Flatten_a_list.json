{"isSuccess":true,"url":"http://rosettacode.org//wiki/Flatten_a_list","codeArray":["function flatten(list) {\n    return list.reduce(function (acc, val) {\n      return acc.concat(val.constructor === Array ? flatten(val) : val);\n    }, []);\n  }(function () {\n      'use strict';\n      // flatten :: Tree a -> [a]\n      function flatten(t) {\n          return (t instanceof Array ? concatMap(flatten, t) : t);\n      }\n      // concatMap :: (a -> [b]) -> [a] -> [b]\n      function concatMap(f, xs) {\n          return [].concat.apply([], xs.map(f));\n      }\n      return flatten(\n          [[1], 2, [[3, 4], 5], [[[]]], [[[6]]], 7, 8, []]\n      );\n  })();let flatten = list => list.reduce(\n      (a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []\n  );"],"uncertainCodeArray":[],"textArray":[]}