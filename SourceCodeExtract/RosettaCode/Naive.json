{"isSuccess":true,"url":"http://rosettacode.org//wiki/Verify_distribution_uniformity/Naive","codeArray":["function distcheck(random_func, times, opts) {\n      if (opts === undefined) opts = {}\n      opts['delta'] = opts['delta'] || 2;\n      var count = {}, vals = [];\n      for (var i = 0; i < times; i++) {\n          var val = random_func();\n          if (! has_property(count, val)) {\n              count[val] = 1;\n              vals.push(val);\n          }\n          else\n              count[val] ++;\n      }\n      vals.sort(function(a,b) {return a-b});\n      var target = times / vals.length;\n      var tolerance = target * opts['delta'] / 100; \n      for (var i = 0; i < vals.length; i++) {\n          var val = vals[i];\n          if (Math.abs(count[val] - target) > tolerance) \n              throw \"distribution potentially skewed for \" + val +\n                    \": expected result around \" + target + \", got \" +count[val];\n          else\n              print(val + \"\\t\" + count[val]);\n      }\n  }\n  function has_property(obj, propname) {\n      return typeof(obj[propname]) == \"undefined\" ? false : true;\n  }\n  try {\n      distcheck(function() {return Math.floor(10 * Math.random())}, 100000);\n      print();\n      distcheck(function() {return (Math.random() > 0.95 ? 1 : 0)}, 100000);\n  } catch (e) {\n      print(e);\n  }"],"uncertainCodeArray":[],"textArray":[]}