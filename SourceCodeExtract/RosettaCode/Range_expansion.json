{"isSuccess":true,"url":"http://rosettacode.org//wiki/Range_expansion","codeArray":["#!/usr/bin/env js\n  function main() {\n      print(rangeExpand('-6,-3--1,3-5,7-11,14,15,17-20'));\n  }\n  function rangeExpand(rangeExpr) {\n      function getFactors(term) {\n          var matches = term.match(/(-?[0-9]+)-(-?[0-9]+)/);\n          if (!matches) return {first:Number(term)};\n          return {first:Number(matches[1]), last:Number(matches[2])};\n      }\n      function expandTerm(term) {\n          var factors = getFactors(term);\n          if (factors.length < 2) return [factors.first];\n          var range = [];\n          for (var n = factors.first; n <= factors.last;  n++) {\n              range.push(n);\n          }\n          return range;\n      }\n      var result = [];\n      var terms = rangeExpr.split(/,/);\n      for (var t in terms) {\n          result = result.concat(expandTerm(terms[t]));\n      }\n      return result;\n  }\n  main();\n  Â (function (strTest) {\n      'use strict';\n      // s -> [n]\n      function expansion(strExpr) {\n          // concat map yields flattened output list\n          return [].concat.apply([], strExpr.split(',').map(function (x) {\n              return x.split('-').reduce(function (a, s, i, l) {\n                  // negative (after item 0) if preceded by an empty string\n                  // (i.e. a hyphen-split artefact, otherwise ignored)\n                  return s.length ? i ? a.concat(\n                      parseInt(l[i - 1].length ? s : '-' + s, 10)\n                  ) : [+s] : a;\n              }, []);\n          // two-number lists are interpreted as ranges\n          }).map(function (r) { \n              return r.length > 1 ? range.apply(null, r) : r;\n          }));\n      }\n      // [m..n]\n      function range(m, n) {\n          return Array.apply(null, Array(n - m + 1)).map(function (x, i) {\n              return m + i;\n          });\n      }\n      return expansion(strTest);\n  })('-6,-3--1,3-5,7-11,14,15,17-20');[-6, -3, -2, -1, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20]"],"uncertainCodeArray":[],"textArray":[]}