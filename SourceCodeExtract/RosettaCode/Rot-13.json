{"isSuccess":true,"url":"http://rosettacode.org//wiki/Rot-13","codeArray":["function rot13(c) {\n    return c.replace(/([a-m])|([n-z])/ig, function($0, $1, $2) {\n        return String.fromCharCode($1 ? $1.charCodeAt(0) + 13 : $2 ? $2.charCodeAt(0) - 13 : 0) || $0;\n    });\n}\nrot13(\"ABJURER nowhere\") // NOWHERE abjurer"," function rot13(value) {\n     if (!value)\n         return \"\";\n\n     function singleChar(c) {\n         if (c.toUpperCase() < \"A\" || c.toUpperCase() > \"Z\")\n             return c;\n         if (c.toUpperCase() <= \"M\")\n             return String.fromCharCode(c.charCodeAt(0) + 13);\n         return String.fromCharCode(c.charCodeAt(0) - 13);\n     }\n     return _.map(value.split(\"\"), singleChar).join(\"\");\n }\n describe(\"Rot-13\", function() {\n     it(\"Given nothing will return nothing\", function() {\n         expect(rot13()).toBe(\"\");\n     });\n     it(\"Given empty string will return empty string\", function() {\n         expect(rot13(\"\")).toBe(\"\");\n     });\n     it(\"Given A will return N\", function() {\n         expect(rot13(\"A\")).toBe(\"N\");\n     });\n     it(\"Given B will return O\", function() {\n         expect(rot13(\"B\")).toBe(\"O\");\n     });\n     it(\"Given N will return A\", function() {\n         expect(rot13(\"N\")).toBe(\"A\");\n     });\n     it(\"Given Z will return M\", function() {\n         expect(rot13(\"Z\")).toBe(\"M\");\n     });\n     it(\"Given ZA will return MN\", function() {\n         expect(rot13(\"ZA\")).toBe(\"MN\");\n     });\n     it(\"Given HELLO will return URYYB\", function() {\n         expect(rot13(\"HELLO\")).toBe(\"URYYB\");\n     });\n     it(\"Given hello will return uryyb\", function() {\n         expect(rot13(\"hello\")).toBe(\"uryyb\");\n     });\n     it(\"Given hello1 will return uryyb1\", function() {\n         expect(rot13(\"hello1\")).toBe(\"uryyb1\");\n     });\n });"],"uncertainCodeArray":[],"textArray":[]}