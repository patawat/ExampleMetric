{"isSuccess":true,"url":"http://rosettacode.org/wiki/Euler%27s_sum_of_powers_conjecture","codeArray":["\tvar eulers_sum_of_powers = function(iMaxN) {\n\t    var aPow5 = [];\n\t    var oPow5ToN = {};\n\t    for (var iP = 0; iP <= iMaxN; iP++) {\n\t        var iPow5 = Math.pow(iP, 5);\n\t        aPow5.push(iPow5);\n\t        oPow5ToN[iPow5] = iP;\n\t    }\n\t    for (var i0 = 1; i0 <= iMaxN; i0++) {\n\t        for (var i1 = 1; i1 <= i0; i1++) {\n\t            for (var i2 = 1; i2 <= i1; i2++) {\n\t                for (var i3 = 1; i3 <= i2; i3++) {\n\t                    var iPow5Sum = aPow5[i0] + aPow5[i1] + aPow5[i2] + aPow5[i3];\n\t                    if (typeof oPow5ToN[iPow5Sum] != 'undefined') {\n\t                        return {\n\t                            i0: i0,\n\t                            i1: i1,\n\t                            i2: i2,\n\t                            i3: i3,\n\t                            iSum: oPow5ToN[iPow5Sum]\n\t                        };\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\tvar oResult = eulers_sum_of_powers(250);\n\tconsole.log(oResult.i0 + '^5 + ' + oResult.i1 + '^5 + ' + oResult.i2 + '^5 + ' + oResult.i3 + '^5 = ' + oResult.iSum + '^5');","var N = 1000,\n    first = false\nvar ns = {},\n    npv = []\nfor (var n = 0; n <= N; n++) {\n    var np = Math.pow(n, 5);\n    ns[np] = n;\n    npv.push(np)\n}\nloop:\n    for (var a = 1; a <= N; a += 1)\n        for (var b = a + 1; b <= N; b += 1)\n            for (var c = b + 1; c <= N; c += 1)\n                for (var d = c + 1; d <= N; d += 1) {\n                    var x = ns[npv[a] + npv[b] + npv[c] + npv[d]]\n                    if (!x) continue\n                    print([a, b, c, d, x])\n                    if (first) break loop\n                }\n\nfunction print(c) {\n    var e = '<sup>5</sup>',\n        ep = e + ' + '\n    document.write(c[0], ep, c[1], ep, c[2], ep, c[3], e, ' = ', c[4], e, '<br>')\n}","var N = 1000,\n    first = false\nvar npv = [],\n    M = 30 // x^5 == x modulo M (=2*3*5) \nfor (var n = 0; n <= N; n += 1) npv[n] = Math.pow(n, 5)\nvar mx = 1 + npv[N];\nwhile (n <= N + M) npv[n++] = mx\nloop:\n    for (var a = 1; a <= N; a += 1)\n        for (var b = a + 1; b <= N; b += 1)\n            for (var c = b + 1; c <= N; c += 1)\n                for (var t = npv[a] + npv[b] + npv[c], d = c + 1, x = t % M + d;\n                    (n = t + npv[d]) < mx; d += 1, x += 1) {\n                    while (npv[x] <= n) x += M;\n                    x -= M // jump over M=30 values for x>d\n                    if (npv[x] != n) continue\n                    print([a, b, c, d, x])\n                    if (first) break loop;\n                }\n\nfunction print(c) {\n    var e = '<sup>5</sup>',\n        ep = e + ' + '\n    document.write(c[0], ep, c[1], ep, c[2], ep, c[3], e, ' = ', c[4], e, '<br>')\n}","var N = 1000,\n    first = false\nvar dxs = {},\n    pow = Math.pow\nfor (var d = 1; d <= N; d += 1)\n    for (var dp = pow(d, 5), x = d + 1; x <= N; x += 1)\n        dxs[pow(x, 5) - dp] = [d, x]\nloop:\n    for (var a = 1; a < N; a += 1)\n        for (var ap = pow(a, 5), b = a + 1; b < N; b += 1)\n            for (var abp = ap + pow(b, 5), c = b + 1; c < N; c += 1) {\n                var dx = dxs[abp + pow(c, 5)]\n                if (!dx || c >= dx[0]) continue\n                print([a, b, c].concat(dx))\n                if (first) break loop\n            }\n\nfunction print(c) {\n    var e = '<sup>5</sup>',\n        ep = e + ' + '\n    document.write(c[0], ep, c[1], ep, c[2], ep, c[3], e, ' = ', c[4], e, '<br>')\n}","var N = 1000,\n    first = false\nvar is = {},\n    ipv = [],\n    ijs = {},\n    ijpv = [],\n    pow = Math.pow\nfor (var i = 1; i <= N; i += 1) {\n    var ip = pow(i, 5);\n    is[ip] = i;\n    ipv.push(ip)\n    for (var j = i + 1; j <= N; j += 1) {\n        var ijp = ip + pow(j, 5);\n        ijs[ijp] = [i, j];\n        ijpv.push(ijp)\n    }\n}\nijpv.sort(function(a, b) {\n    return a - b\n})\nloop:\n    for (var i = 0, ei = ipv.length; i < ei; i += 1)\n        for (var xp = ipv[i], j = 0, je = ijpv.length; j < je; j += 1) {\n            var cdp = ijpv[j]\n            if (cdp >= xp) break\n            var cd = ijs[xp - cdp]\n            if (!cd) continue\n            var ab = ijs[cdp]\n            if (ab[1] >= cd[0]) continue\n            print([].concat(ab, cd, is[xp]))\n            if (first) break loop\n        }\n\nfunction print(c) {\n    var e = '<sup>5</sup>',\n        ep = e + ' + '\n    document.write(c[0], ep, c[1], ep, c[2], ep, c[3], e, ' = ', c[4], e, '<br>')\n}"],"uncertainCodeArray":[],"textArray":[]}