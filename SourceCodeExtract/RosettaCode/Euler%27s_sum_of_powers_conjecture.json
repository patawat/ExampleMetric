{"isSuccess":true,"url":"http://rosettacode.org/wiki/Euler%27s_sum_of_powers_conjecture","codeArray":["\tvar eulers_sum_of_powers = function (iMaxN) {\n  \t\tvar aPow5 = [];\n  \t\tvar oPow5ToN = {};\n  \t\tfor (var iP = 0; iP <= iMaxN; iP ++) {\n  \t\t\tvar iPow5 = Math.pow(iP, 5);\n  \t\t\taPow5.push(iPow5);\n  \t\t\toPow5ToN[iPow5] = iP;\n  \t\t}\n  \t\tfor (var i0 = 1; i0 <= iMaxN; i0 ++) {\n  \t\t\tfor (var i1 = 1; i1 <= i0; i1 ++) {\n  \t\t\t\tfor (var i2 = 1; i2 <= i1; i2 ++) {\n  \t\t\t\t\tfor (var i3 = 1; i3 <= i2; i3 ++) {\n  \t\t\t\t\t\tvar iPow5Sum = aPow5[i0] + aPow5[i1] + aPow5[i2] + aPow5[i3];\n  \t\t\t\t\t\tif (typeof oPow5ToN[iPow5Sum] != 'undefined') {\n  \t\t\t\t\t\t\treturn {\n  \t\t\t\t\t\t\t\ti0: i0,\n  \t\t\t\t\t\t\t\ti1: i1,\n  \t\t\t\t\t\t\t\ti2: i2,\n  \t\t\t\t\t\t\t\ti3: i3,\n  \t\t\t\t\t\t\t\tiSum: oPow5ToN[iPow5Sum]\n  \t\t\t\t\t\t\t};\n  \t\t\t\t\t\t}\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t};\n  \tvar oResult = eulers_sum_of_powers(250);\n  \tconsole.log(oResult.i0 + '^5 + ' + oResult.i1 + '^5 + ' + oResult.i2 + '^5 + ' + oResult.i3 + '^5 = ' + oResult.iSum + '^5');var N=1000, first=false\n  var ns={}, npv=[]\n  for (var n=0; n<=N; n++) {\n  \tvar np=Math.pow(n,5); ns[np]=n; npv.push(np)\n  }\n  loop:\n  for (var a=1;   a<=N; a+=1) \n  for (var b=a+1; b<=N; b+=1)\n  for (var c=b+1; c<=N; c+=1)\n  for (var d=c+1; d<=N; d+=1) {\n  \tvar x = ns[ npv[a]+npv[b]+npv[c]+npv[d] ]\n  \tif (!x) continue\n  \tprint( [a, b, c, d, x] )\n  \tif (first) break loop\n  }\n  function print(c) {\n  \tvar e='<sup>5</sup>', ep=e+' + '\n  \tdocument.write(c[0], ep, c[1], ep, c[2], ep, c[3], e, ' = ', c[4], e, '<br>')\n  }var N=1000, first=false\n  var npv=[], M=30 // x^5 == x modulo M (=2*3*5) \n  for (var n=0; n<=N; n+=1) npv[n]=Math.pow(n, 5)\n  var mx=1+npv[N]; while(n<=N+M) npv[n++]=mx\n  loop:\n  for (var a=1;   a<=N; a+=1)\n  for (var b=a+1; b<=N; b+=1)\n  for (var c=b+1; c<=N; c+=1)\n  for (var t=npv[a]+npv[b]+npv[c], d=c+1, x=t%M+d; (n=t+npv[d])<mx; d+=1, x+=1) {\n  \twhile (npv[x]<=n) x+=M; x-=M // jump over M=30 values for x>d\n  \tif (npv[x] != n) continue\n  \tprint( [a, b, c, d, x] )\n  \tif (first) break loop;\n  }\n  function print(c) {\n  \tvar e='<sup>5</sup>', ep=e+' + '\n  \tdocument.write(c[0], ep, c[1], ep, c[2], ep, c[3], e, ' = ', c[4], e, '<br>')\n  }var N=1000, first=false\n  var dxs={}, pow=Math.pow \n  for (var d=1; d<=N; d+=1)\n  \tfor (var dp=pow(d,5), x=d+1; x<=N; x+=1)\n  \t\tdxs[pow(x,5)-dp]=[d,x]\n  loop:\n  for (var a=1; a<N; a+=1)\n  for (var ap=pow(a,5), b=a+1; b<N; b+=1) \n  for (var abp=ap+pow(b,5), c=b+1; c<N; c+=1) {\n  \tvar dx = dxs[ abp+pow(c,5) ]\n  \tif (!dx || c >= dx[0]) continue\n  \tprint( [a, b, c].concat( dx ) )  \n  \tif (first) break loop\n  }\n  function print(c) {\n  \tvar e='<sup>5</sup>', ep=e+' + '\n  \tdocument.write(c[0], ep, c[1], ep, c[2], ep, c[3], e, ' = ', c[4], e, '<br>')\n  }var N=1000, first=false\n  var is={}, ipv=[], ijs={}, ijpv=[], pow=Math.pow\n  for (var i=1; i<=N; i+=1) {\n  \tvar ip=pow(i,5); is[ip]=i; ipv.push(ip)\n  \tfor (var j=i+1; j<=N; j+=1) {\n  \t\tvar ijp=ip+pow(j,5); ijs[ijp]=[i,j]; ijpv.push(ijp)\n  \t} \n  }\n  ijpv.sort( function (a,b) {return a - b } )\n  loop:\n  for (var i=0, ei=ipv.length; i<ei; i+=1)\n  for (var xp=ipv[i], j=0, je=ijpv.length; j<je; j+=1) {\n  \tvar cdp = ijpv[j]\n  \tif (cdp >= xp) break\n  \tvar cd = ijs[xp-cdp]\n  \tif (!cd) continue\n  \tvar ab = ijs[cdp]\n  \tif (ab[1] >= cd[0]) continue\n  \tprint( [].concat(ab, cd, is[xp]) )\n  \tif (first) break loop\n  }\n  function print(c) {\n  \tvar e='<sup>5</sup>', ep=e+' + '\n  \tdocument.write(c[0], ep, c[1], ep, c[2], ep, c[3], e, ' = ', c[4], e, '<br>')\n  }"],"uncertainCodeArray":[],"textArray":[]}