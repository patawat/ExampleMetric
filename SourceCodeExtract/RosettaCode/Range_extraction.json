{"isSuccess":true,"url":"http://rosettacode.org//wiki/Range_extraction","codeArray":["function rangeExtraction(list) {\n    var len = list.length;\n    var out = [];\n    var i, j;\n    for (i = 0; i < len; i = j + 1) {\n      // beginning of range or single\n      out.push(list[i]);\n      // find end of range\n      for (var j = i + 1; j < len && list[j] == list[j-1] + 1; j++);\n      j--;\n      if (i == j) {\n        // single number\n        out.push(\",\");\n      } else if (i + 1 == j) {\n        // two numbers\n        out.push(\",\", list[j], \",\");\n      } else { \n        // range\n        out.push(\"-\", list[j], \",\");\n      }\n    }\n    out.pop(); // remove trailing comma\n    return out.join(\"\");\n  }\n  // using print function as supplied by Rhino standalone\n  print(rangeExtraction([\n    0,  1,  2,  4,  6,  7,  8, 11, 12, 14,\n    15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n    25, 27, 28, 29, 30, 31, 32, 33, 35, 36,\n    37, 38, 39\n  ]));(function (lstTest) {\n      'use strict';\n      function rangeString(xs) {\n          var iRightmost = xs.length - 1,\n              // Using foldr/reduceRight proves simpler here than foldl/reduce\n              // (the left end of the list is easier to reach than the tip of the tail)\n              lstSeries = xs.reduceRight(function (a, x, i, l) {\n                  return i < iRightmost ? (\n                      // new series if rightward gap > 1\n                      l[i + 1] - x > 1 ? (\n                          [[x]].concat(a)\n                      ) : (\n                          // This value prepended to current series (if a \n                          // series-breaker, or the start of the list, is at left)\n                          (i === 0 || (x - l[i - 1]) > 1) ? (\n                              [[x].concat(a[0])].concat(a.slice(1))\n                              // or, if the series continues to the left, \n                              // just an unmodified copy of the accumulator\n                          ) : a\n                      )\n                  ) : [[x]];\n              }, []);\n          return lstSeries.map(function (r) {\n              var lng = r.length,\n                  d = lng > 1 ? r[1] - r[0] : 0;\n              return d ? r[0] + (d > 1 ? '-' : ',') + r[1] : r[0];\n          }).join(',');\n      }\n      return rangeString(lstTest);\n  })([0, 1, 2, 4, 6, 7, 8, 11, 12, 14,\n     15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\n     25, 27, 28, 29, 30, 31, 32, 33, 35, 36,\n     37, 38, 39]);\"0-2,4,6-8,11,12,14-25,27-33,35-39\""],"uncertainCodeArray":[],"textArray":[]}