{"isSuccess":true,"url":"http://rosettacode.org//wiki/Animate_a_pendulum","codeArray":["function PendulumSim(length_m, gravity_mps2, initialAngle_rad, timestep_ms, callback) {\n    var velocity = 0;\n    var angle = initialAngle_rad;\n    var k = -gravity_mps2 / length_m;\n    var timestep_s = timestep_ms / 1000;\n    return setInterval(function() {\n        var acceleration = k * Math.sin(angle);\n        velocity += acceleration * timestep_s;\n        angle += velocity * timestep_s;\n        callback(angle);\n    }, timestep_ms);\n}\nvar canvas = document.getElementById('canvas');\nvar context = canvas.getContext('2d');\nvar prev = 0;\nvar sim = PendulumSim(1, 9.80665, Math.PI * 99 / 100, 10, function(angle) {\n    var rPend = Math.min(canvas.width, canvas.height) * 0.47;\n    var rBall = Math.min(canvas.width, canvas.height) * 0.02;\n    var rBar = Math.min(canvas.width, canvas.height) * 0.005;\n    var ballX = Math.sin(angle) * rPend;\n    var ballY = Math.cos(angle) * rPend;\n    context.fillStyle = \"rgba(255,255,255,0.51)\";\n    context.globalCompositeOperation = \"destination-out\";\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.fillStyle = \"yellow\";\n    context.strokeStyle = \"rgba(0,0,0,\" + Math.max(0, 1 - Math.abs(prev - angle) * 10) + \")\";\n    context.globalCompositeOperation = \"source-over\";\n    context.save();\n    context.translate(canvas.width / 2, canvas.height / 2);\n    context.rotate(angle);\n    context.beginPath();\n    context.rect(-rBar, -rBar, rBar * 2, rPend + rBar * 2);\n    context.fill();\n    context.stroke();\n    context.beginPath();\n    context.arc(0, rPend, rBall, 0, Math.PI * 2, false);\n    context.fill();\n    context.stroke();\n    context.restore();\n    prev = angle;\n});","in_angle.value = 0;\nvar cx = 150,\n    cy = 50;\nvar radius = 100; // cm\nvar g = 981; // cm/s^2\nvar angle = 0; // radians\nvar vel = 0; // cm/s\nvar dx = 0.02; // s\nvar acc, vel, penx, peny;\nvar timerFunction = null;\n\nfunction stopAnimation() {\n    if (timerFunction != null) {\n        clearInterval(timerFunction);\n        timerFunction = null;\n    }\n}\n\nfunction startAnimation() {\n    if (!timerFunction) timerFunction = setInterval(swing, dx * 1000);\n}\n\nfunction swing() {\n    acc = g * Math.cos(angle) * dx;\n    vel += acc * dx;\n    angle += vel * dx;\n    setPenPos();\n}\n\nfunction setPenPos() {\n    penx = cx + radius * Math.cos(angle);\n    peny = cy + radius * Math.sin(angle);\n    scene.getElementById(\"string\").setAttribute(\"x2\", penx);\n    scene.getElementById(\"string\").setAttribute(\"y2\", peny);\n    scene.getElementById(\"ball\").setAttribute(\"cx\", penx);\n    scene.getElementById(\"ball\").setAttribute(\"cy\", peny);\n}\n\nfunction reset() {\n    var val = parseInt(in_angle.value) * 0.0174532925199;\n    if (val) angle = val;\n    else angle = 0;\n    acc = 0;\n    vel = 0;\n    setPenPos();\n}\n\nfunction condReset() {\n    if (!timerFunction) reset();\n}"],"uncertainCodeArray":[],"textArray":[]}