{"isSuccess":true,"url":"http://rosettacode.org//wiki/Animate_a_pendulum","codeArray":["<html><head>\n    <title>Pendulum</title>\n  </head><body style=\"background: gray;\">\n  <canvas id=\"canvas\" width=\"600\" height=\"600\">\n    <p>Sorry, your browser does not support the &lt;canvas&gt; used to display the pendulum animation.</p>\n  </canvas>\n  <script>\n    function PendulumSim(length_m, gravity_mps2, initialAngle_rad, timestep_ms, callback) {\n      var velocity = 0;\n      var angle = initialAngle_rad;\n      var k = -gravity_mps2/length_m;\n      var timestep_s = timestep_ms / 1000;\n      return setInterval(function () {\n        var acceleration = k * Math.sin(angle);\n        velocity += acceleration * timestep_s;\n        angle    += velocity     * timestep_s;\n        callback(angle);\n      }, timestep_ms);\n    }\n    var canvas = document.getElementById('canvas');\n    var context = canvas.getContext('2d');\n    var prev=0;\n    var sim = PendulumSim(1, 9.80665, Math.PI*99/100, 10, function (angle) {\n      var rPend = Math.min(canvas.width, canvas.height) * 0.47;\n      var rBall = Math.min(canvas.width, canvas.height) * 0.02;\n      var rBar = Math.min(canvas.width, canvas.height) * 0.005;\n      var ballX = Math.sin(angle) * rPend;\n      var ballY = Math.cos(angle) * rPend;\n      context.fillStyle = \"rgba(255,255,255,0.51)\";\n      context.globalCompositeOperation = \"destination-out\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n      context.fillStyle = \"yellow\";\n      context.strokeStyle = \"rgba(0,0,0,\"+Math.max(0,1-Math.abs(prev-angle)*10)+\")\";\n      context.globalCompositeOperation = \"source-over\";\n      context.save();\n        context.translate(canvas.width/2, canvas.height/2);\n        context.rotate(angle);\n        context.beginPath();\n        context.rect(-rBar, -rBar, rBar*2, rPend+rBar*2);\n        context.fill();\n        context.stroke();\n        context.beginPath();\n        context.arc(0, rPend, rBall, 0, Math.PI*2, false);\n        context.fill();\n        context.stroke();\n      context.restore();\n      prev=angle;\n    });\n  </script>\n  </body></html><html>\n  \t<head>\n  \t\t<title>Swinging Pendulum Simulation</title>\n  \t</head>\n  \t<body><center>\n  \t\t<svg id=\"scene\" height=\"200\" width=\"300\">\n  \t\t\t<line id=\"string\" x1=\"150\" y1=\"50\" x2=\"250\" y2=\"50\" stroke=\"brown\" stroke-width=\"4\" />\n  \t\t\t<circle id=\"ball\" cx=\"250\" cy=\"50\" r=\"20\" fill=\"black\" />\n  \t\t</svg>\n  \t\t<br>\n  \t\tInitial angle:<input id=\"in_angle\" type=\"number\" min=\"0\" max=\"180\" onchange=\"condReset()\"/>(degrees)\n  \t\t<br>\n  \t\t<button type=\"button\" onclick=\"startAnimation()\">Start</button>\n  \t\t<button type=\"button\" onclick=\"stopAnimation()\">Stop</button>\n  \t\t<button type=\"button\" onclick=\"reset()\">Reset</button>\n  \t\t<script>\n  \t\t\tin_angle.value = 0;\n  \t\t\tvar cx = 150, cy = 50;\n  \t\t\tvar radius = 100; // cm\n  \t\t\tvar g = 981; // cm/s^2\n  \t\t\tvar angle = 0; // radians\n  \t\t\tvar vel = 0; // cm/s\n  \t\t\tvar dx = 0.02; // s\n  \t\t\tvar acc, vel, penx, peny;\n  \t\t\tvar timerFunction = null;\n  \t\t\tfunction stopAnimation() {\n  \t\t\t\tif(timerFunction != null){\n  \t\t\t\t\tclearInterval(timerFunction);\n  \t\t\t\t\ttimerFunction = null;\n  \t\t\t\t}\n  \t\t\t}\n  \t\t\tfunction startAnimation() {\n  \t\t\t\tif(!timerFunction) timerFunction = setInterval(swing, dx * 1000);\n  \t\t\t}\n  \t\t\tfunction swing(){\n  \t\t\t\tacc = g * Math.cos(angle) * dx;\n  \t\t\t\tvel += acc * dx;\n  \t\t\t\tangle += vel * dx;\n  \t\t\t\tsetPenPos();\n  \t\t\t}\n  \t\t\tfunction setPenPos(){\n  \t\t\t\tpenx = cx + radius * Math.cos(angle);\n  \t\t\t\tpeny = cy + radius * Math.sin(angle);\n  \t\t\t\tscene.getElementById(\"string\").setAttribute(\"x2\", penx);\n  \t\t\t\tscene.getElementById(\"string\").setAttribute(\"y2\", peny);\n  \t\t\t\tscene.getElementById(\"ball\").setAttribute(\"cx\", penx);\n  \t\t\t\tscene.getElementById(\"ball\").setAttribute(\"cy\", peny);\n  \t\t\t}\n  \t\t\tfunction reset(){\n  \t\t\t\tvar val = parseInt(in_angle.value)*0.0174532925199;\n  \t\t\t\tif (val) angle = val;\n  \t\t\t\telse angle = 0;\n  \t\t\t\tacc = 0;\n  \t\t\t\tvel = 0;\n  \t\t\t\tsetPenPos();\n  \t\t\t}\n  \t\t\tfunction condReset(){\n  \t\t\t\tif (!timerFunction) reset();\n  \t\t\t}\n  \t\t</script>\n  \t</body>\n  </html>"],"uncertainCodeArray":[],"textArray":[]}