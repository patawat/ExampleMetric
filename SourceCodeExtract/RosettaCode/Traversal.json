{"isSuccess":true,"url":"http://rosettacode.org//wiki/Singly-linked_list/Traversal","codeArray":["LinkedList.prototype.traverse = function(func) {\n      func(this);\n      if (this.next() != null)\n          this.next().traverse(func);\n  }\n  LinkedList.prototype.print = function() {\n      this.traverse( function(node) {print(node.value())} );\n  }\n  var head = createLinkedListFromArray([10,20,30,40]);\n  head.print();var map = function (fn, list) {\n          return list.map(fn);\n      },\n      foldr = function (fn, acc, list) {\n          var listr = list.slice();\n          listr.reverse();\n          return listr.reduce(fn, acc);\n      },\n      traverse = function (list, fn) {\n          return list.forEach(fn);\n      };\n  var range = function (m, n) {\n      return Array.apply(null, Array(n - m + 1)).map(\n          function (x, i) {\n              return m + i;\n          }\n      );\n  };\n  //      --> [false, false, false, false, false, true, true, true, true, true]\n  map(function (x) {\n      return x > 5;\n  }, range(1, 10));\n  //      --> [\"Apples\", \"Oranges\", \"Mangos\", \"Pears\"]\n  map(function (x) {\n      return x + 's';\n  }, [\"Apple\", \"Orange\", \"Mango\", \"Pear\"])\n  //      --> 55\n  foldr(function (acc, x) {\n      return acc + x;\n  }, 0, range(1, 10))\n  traverse([\"Apple\", \"Orange\", \"Mango\", \"Pear\"], function (x) {\n      console.log(x);\n  })\n  /* Apple */\n  /* Orange */\n  /* Mango */\n  /* Pear */"],"uncertainCodeArray":[],"textArray":[]}