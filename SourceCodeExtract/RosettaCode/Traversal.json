{"isSuccess":true,"url":"http://rosettacode.org//wiki/Singly-linked_list/Traversal","codeArray":["LinkedList.prototype.traverse = function(func) {\n    func(this);\n    if (this.next() != null)\n        this.next().traverse(func);\n}\nLinkedList.prototype.print = function() {\n    this.traverse(function(node) {\n        print(node.value())\n    });\n}\nvar head = createLinkedListFromArray([10, 20, 30, 40]);\nhead.print();","var map = function(fn, list) {\n        return list.map(fn);\n    },\n    foldr = function(fn, acc, list) {\n        var listr = list.slice();\n        listr.reverse();\n        return listr.reduce(fn, acc);\n    },\n    traverse = function(list, fn) {\n        return list.forEach(fn);\n    };\nvar range = function(m, n) {\n    return Array.apply(null, Array(n - m + 1)).map(\n        function(x, i) {\n            return m + i;\n        }\n    );\n};\n//      --> [false, false, false, false, false, true, true, true, true, true]\nmap(function(x) {\n    return x > 5;\n}, range(1, 10));\n//      --> [\"Apples\", \"Oranges\", \"Mangos\", \"Pears\"]\nmap(function(x) {\n        return x + 's';\n    }, [\"Apple\", \"Orange\", \"Mango\", \"Pear\"])\n    //      --> 55\nfoldr(function(acc, x) {\n    return acc + x;\n}, 0, range(1, 10))\ntraverse([\"Apple\", \"Orange\", \"Mango\", \"Pear\"], function(x) {\n        console.log(x);\n    })\n    /* Apple */\n    /* Orange */\n    /* Mango */\n    /* Pear */"],"uncertainCodeArray":[],"textArray":[]}