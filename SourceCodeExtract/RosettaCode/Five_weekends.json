{"isSuccess":true,"url":"http://rosettacode.org//wiki/Five_weekends","codeArray":["function startsOnFriday(month, year) {\n    // 0 is Sunday, 1 is Monday, ... 5 is Friday, 6 is Saturday\n    return new Date(year, month, 1).getDay() === 5;\n}\n\nfunction has31Days(month, year) {\n    return new Date(year, month, 31).getDate() === 31;\n}\n\nfunction checkMonths(year) {\n    var month, count = 0;\n    for (month = 0; month < 12; month += 1) {\n        if (startsOnFriday(month, year) && has31Days(month, year)) {\n            count += 1;\n            document.write(year + ' ' + month + '<br>');\n        }\n    }\n    return count;\n}\n\nfunction fiveWeekends() {\n    var\n        startYear = 1900,\n        endYear = 2100,\n        year,\n        monthTotal = 0,\n        yearsWithoutFiveWeekends = [],\n        total = 0;\n    for (year = startYear; year <= endYear; year += 1) {\n        monthTotal = checkMonths(year);\n        total += monthTotal;\n        // extra credit\n        if (monthTotal === 0)\n            yearsWithoutFiveWeekends.push(year);\n    }\n    document.write('Total number of months: ' + total + '<br>');\n    document.write('<br>');\n    document.write(yearsWithoutFiveWeekends + '<br>');\n    document.write('Years with no five-weekend months: ' + yearsWithoutFiveWeekends.length + '<br>');\n}\nfiveWeekends();","var Months = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'\n];\nvar leap = 0,\n    // Relative offsets between first day of each month\n    offset = [3, 0, 3, 2, 3, 2, 3, 3, 2, 3, 2, 3],\n    // Months that contain 31 days\n    longMonths = [1, 3, 5, 7, 8, 10, 12],\n    startYear = 1900,\n    year = startYear,\n    endYear = 2100,\n    // Jan 1, 1900 starts on a Monday\n    day = 1,\n    totalPerYear = 0,\n    total = 0,\n    without = 0;\nfor (; year < endYear + 1; year++) {\n    leap = totalPerYear = 0;\n    if (year % 4 === 0) {\n        if (year % 100 === 0) {\n            if (year % 400 === 0) {\n                leap = 1;\n            }\n        } else {\n            leap = 1;\n        }\n    }\n    for (var i = 0; i < offset.length; i++) {\n        for (var j = 0; day === 5 && j < longMonths.length; j++) {\n            if (i + 1 === longMonths[j]) {\n                console.log(year + '-' + Months[i]);\n                totalPerYear++;\n                total++;\n                break;\n            }\n        }\n        // February -- if leap year, then +1 day\n        if (i == 1) {\n            day = (day + leap) % 7;\n        } else {\n            day = (day + offset[i]) % 7;\n        }\n    }\n    if (totalPerYear === 0) {\n        without++;\n    }\n}\nconsole.log('Number of months that have five full weekends from 1900 to 2100: ' + total);\nconsole.log('Number of years without any five full weekend months: ' + without);","(function() {\n    'use strict';\n    // longMonthsStartingFriday :: Int -> Int\n    function longMonthsStartingFriday(y) {\n        return [0, 2, 4, 6, 7, 9, 11]\n            .filter(function(m) {\n                return (new Date(Date.UTC(y, m, 1)))\n                    .getDay() === 5;\n            });\n    }\n    // range :: Int -> Int -> [Int]\n    function range(m, n) {\n        return Array.apply(null, Array(n - m + 1))\n            .map(function(x, i) {\n                return m + i;\n            });\n    }\n    var lstNames = [\n            'January', '', 'March', '', 'May', '',\n            'July', 'August', '', 'October', '', 'December'\n        ],\n        lstYears = range(1900, 2100),\n        lstFullMonths = lstYears\n        .reduce(function(a, y) {\n            var strYear = y.toString();\n            return a.concat(\n                longMonthsStartingFriday(y)\n                .map(function(m) {\n                    return strYear + ' ' + lstNames[m];\n                })\n            );\n        }, []),\n        lstLeanYears = lstYears\n        .filter(function(y) {\n            return longMonthsStartingFriday(y)\n                .length === 0;\n        });\n    return JSON.stringify({\n            number: lstFullMonths.length,\n            firstFive: lstFullMonths.slice(0, 5),\n            lastFive: lstFullMonths.slice(-5),\n            leanYearCount: lstLeanYears.length\n        },\n        null, 2\n    );\n})();"],"uncertainCodeArray":[],"textArray":[]}