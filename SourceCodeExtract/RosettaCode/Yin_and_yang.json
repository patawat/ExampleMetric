{"isSuccess":true,"url":"http://rosettacode.org//wiki/Yin_and_yang","codeArray":[" function Arc(posX,posY,radius,startAngle,endAngle,color){//Angle in radians.\n  this.posX=posX;\n  this.posY=posY;\n  this.radius=radius;\n  this.startAngle=startAngle;\n  this.endAngle=endAngle;\n  this.color=color;\n  }\n  //0,0 is the top left of the screen\n  var YingYang=[\n  new Arc(0.5,0.5,1,0.5*Math.PI,1.5*Math.PI,\"white\"),//Half white semi-circle\n  new Arc(0.5,0.5,1,1.5*Math.PI,0.5*Math.PI,\"black\"),//Half black semi-circle\n  new Arc(0.5,0.25,.5,0,2*Math.PI,\"black\"),//black circle\n  new Arc(0.5,0.75,.5,0,2*Math.PI,\"white\"),//white circle\n  new Arc(0.5,0.25,1/6,0,2*Math.PI,\"white\"),//small white circle\n  new Arc(0.5,0.75,1/6,0,2*Math.PI,\"black\")//small black circle\n  ]\n  //Ying Yang is DONE!\n  //Now we'll have to draw it.\n  //We'll draw it in a matrix that way we can get results graphically or by text!\n  function Array2D(width,height){\n  this.height=height;\n  this.width=width;\n  this.array2d=[];\n  for(var i=0;i<this.height;i++){\n  this.array2d.push(new Array(this.width));\n  }\n  }\n  Array2D.prototype.resize=function(width,height){//This is expensive\n  //nheight and nwidth is the difference of the new and old height\n  var nheight=height-this.height,nwidth=width-this.width;\n  if(nwidth>0){\n  for(var i=0;i<this.height;i++){\n  if(i<height)\n  Array.prototype.push.apply(this.array2d[i],new Array(nwidth));\n  }\n  }\n  else if(nwidth<0){\n  for(var i=0;i<this.height;i++){\n  if(i<height)\n   this.array2d[i].splice(width,nwidth);\n  }\n  }\n  if(nheight>0){\n   Array.prototype.push.apply(this.array2d,new Array(width));\n  }\n  else if(nheight<0){\n   this.array2d.splice(height,nheight)\n  }\n  }\n  Array2D.prototype.loop=function(callback){\n  for(var i=0;i<this.height;i++)\n   for(var i2=0;i2<this.width;i++)\n     callback.call(this,this.array2d[i][i2],i,i2);\n  }\n  var mat=new Array2D(100,100);//this sounds fine;\n  YingYang[0];\n  //In construction.\n  Â YinYang = (function () {\n    var scale_x = 2,\n      scale_y = 1,\n      black = \"#\",\n      white = \".\",\n      clear = \" \",\n      out = \"\";\n    function draw(radius) {\n      function inCircle(centre_x, centre_y, radius, x, y) {\n        return Math.pow(x - centre_x, 2) + Math.pow(y - centre_y, 2) <= Math.pow(radius, 2)\n      }\n      var bigCircle = function (x, y) {\n        return inCircle(0, 0, radius, x, y)\n      }, whiteSemiCircle = function (x, y) {\n          return inCircle(0, radius / 2, radius / 2, x, y)\n        }, smallBlackCircle = function (x, y) {\n          return inCircle(0, radius / 2, radius / 6, x, y)\n        }, blackSemiCircle = function (x, y) {\n          return inCircle(0, -radius / 2, radius / 2, x, y)\n        }, smallWhiteCircle = function (x, y) {\n          return inCircle(0, -radius / 2, radius / 6, x, y)\n        };\n      i = 0\n      for (var sy = Math.round(radius * scale_y); sy >= -Math.round(radius * scale_y); sy--) {\n        //console.log(sy)\n        for (var sx = -Math.round(radius * scale_x); sx <= Math.round(radius * scale_x); sx++) {\n          var x = sx / scale_x,\n            y = sy / scale_y;\n          //out+=sx\n          //console.log(sx,bigCircle(x,y))\n          if (bigCircle(x, y)) {\n            //out+=\"\";\n            if (whiteSemiCircle(x, y)) {\n              //console.log(x,y)\n              if (smallBlackCircle(x, y)) {\n                out += black\n              } else {\n                out += white\n              }\n            } else if (blackSemiCircle(x, y)) {\n              if (smallWhiteCircle(x, y)) {\n                out += white\n              } else {\n                out += black\n              }\n            } else if (x < 0) {\n              out += white\n            } else {\n              out += black\n            }\n          } else {\n            out += clear;\n          }\n        }\n        out += \"\\n\";\n      }\n      return out;\n    }\n    return draw\n  })()\n  console.log(YinYang(17))\n  console.log(YinYang(8))<!DOCTYPE html>\n  <html>\n  <head>\n    <body>\n      <svg\n      id=\"svg\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n      version=\"1.1\"\n      width=\"100%\"\n      height=\"100%\">\n        </svg>\n        <script>\n  function makeElem(elemName, attribs) { //atribs must be an Object\n    var e = document.createElementNS(\"http://www.w3.org/2000/svg\", elemName),\n      a, b, d = attribs.style;\n    for (a in attribs) {\n      if (attribs.hasOwnProperty(a)) {\n        if (a == 'style') {\n          for (b in d) {\n            if (d.hasOwnProperty(b)) {\n              e.style[b] = d[b];\n            }\n          }\n          continue;\n        }\n        e.setAttributeNS(null, a, attribs[a]);\n      }\n    }\n    return e;\n  }\n  var svg = document.getElementById(\"svg\");\n  function drawYingYang(n, x, y) {\n    var d = n / 10;\n    h = d * 5, q = h / 2, t = q * 3;\n    //A white circle, for the bulk of the left-hand part\n    svg.appendChild(makeElem(\"circle\", {\n      cx: h,\n      cy: h,\n      r: h,\n      fill: \"white\"\n    }));\n    //A black semicircle, for the bulk of the right-hand part\n    svg.appendChild(makeElem(\"path\", {\n      d: \"M \" + (h + x) + \",\" + y + \" A \" + q + \",\" + q + \" -\" + d * 3 + \" 0,1 \" + (h + x) + \",\" + (n + y) + \" z\",\n      fill: \"black\"\n    }));\n    //Circles to extend each part \n    svg.appendChild(makeElem(\"circle\", {\n      cx: h + x,\n      cy: q + y,\n      r: q,\n      fill: \"white\"\n    }));\n    svg.appendChild(makeElem(\"circle\", {\n      cx: h + x,\n      cy: t + y,\n      r: q,\n      fill: \"black\"\n    }));\n    //The spots\n    svg.appendChild(makeElem(\"circle\", {\n      cx: h + x,\n      cy: q + y,\n      r: d,\n      fill: \"black\"\n    }));\n    svg.appendChild(makeElem(\"circle\", {\n      cx: h + x,\n      cy: t + y,\n      r: q,\n      fill: \"black\"\n    }));\n    svg.appendChild(makeElem(\"circle\", {\n      cx: h + x,\n      cy: t + y,\n      r: d,\n      fill: \"white\"\n    }));\n    //An outline for the whole shape\n    svg.appendChild(makeElem(\"circle\", {\n      cx: h + x,\n      cy: h + y,\n      r: h,\n      fill: \"none\",\n      stroke: \"gray\",\n      \"stroke-width\": d / 3\n    }));\n    if (svg.height.baseVal.valueInSpecifiedUnits < n) {\n      svg.setAttributeNS(null, \"height\", y * 1.25 + n + \"px\")\n    }\n    //svg.appendChild(makeElem(\"circle\",{cx:\"100\", cy:h, r:\"40\", stroke:\"black\", \"stroke-width\":\"2\", fill:\"red\"})) \n  }\n  drawYingYang(100, 30, 30);\n  drawYingYang(1000, 200, 200);\n        </script>\n    </body>\n  </head>\n  </html>"],"uncertainCodeArray":[],"textArray":[]}