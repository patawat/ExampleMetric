{"isSuccess":true,"url":"http://rosettacode.org//wiki/Combinations_with_repetitions","codeArray":["<html><head><title>Donuts</title></head>\n  <body><pre id='x'></pre><script type=\"application/javascript\">\n  function disp(x) {\n  \tvar e = document.createTextNode(x + '\\n');\n  \tdocument.getElementById('x').appendChild(e);\n  }\n  function pick(n, got, pos, from, show) {\n  \tvar cnt = 0;\n  \tif (got.length == n) {\n  \t\tif (show) disp(got.join(' '));\n  \t\treturn 1;\n  \t}\n  \tfor (var i = pos; i < from.length; i++) {\n  \t\tgot.push(from[i]);\n  \t\tcnt += pick(n, got, i, from, show);\n  \t\tgot.pop();\n  \t}\n  \treturn cnt;\n  }\n  disp(pick(2, [], 0, [\"iced\", \"jam\", \"plain\"], true) + \" combos\");\n  disp(\"pick 3 out of 10: \" + pick(3, [], 0, \"a123456789\".split(''), false) + \" combos\");\n  </script></body></html>(function () {\n    // n -> [a] -> [[a]]\n    function combsWithRep(n, lst) {\n      return n ? (\n        lst.length ? combsWithRep(n - 1, lst).map(function (t) {\n          return [lst[0]].concat(t);\n        }).concat(combsWithRep(n, lst.slice(1))) : []\n      ) : [[]];\n    };\n    // If needed, we can derive a significantly faster version of\n    // the simple recursive function above by memoizing it\n    // f -> f\n    function memoized(fn) {\n      m = {};\n      return function (x) {\n        var args = [].slice.call(arguments),\n          strKey = args.join('-');\n        v = m[strKey];\n        if ('u' === (typeof v)[0])\n          m[strKey] = v = fn.apply(null, args);\n        return v;\n      }\n    }\n    // [m..n]\n    function range(m, n) {\n      return Array.apply(null, Array(n - m + 1)).map(function (x, i) {\n        return m + i;\n      });\n    }\n    return [\n        combsWithRep(2, [\"iced\", \"jam\", \"plain\"]),\n      // obtaining and applying a memoized version of the function\n        memoized(combsWithRep)(3, range(1, 10)).length\n      ];\n  })();[\n   [[\"iced\", \"iced\"], [\"iced\", \"jam\"], [\"iced\", \"plain\"],\n    [\"jam\", \"jam\"], [\"jam\", \"plain\"], [\"plain\", \"plain\"]],\n   220\n  ]"],"uncertainCodeArray":[],"textArray":[]}