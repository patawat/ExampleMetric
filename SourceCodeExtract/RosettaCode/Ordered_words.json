{"isSuccess":true,"url":"http://rosettacode.org//wiki/Ordered_words","codeArray":["var fs = require('fs'),\n    print = require('sys').print;\nfs.readFile('./unixdict.txt', 'ascii', function(err, data) {\n    var is_ordered = function(word) {\n            return word.split('').sort().join('') === word;\n        },\n        ordered_words = data.split('\\n').filter(is_ordered).sort(function(a, b) {\n            return a.length - b.length\n        }).reverse(),\n        longest = [],\n        curr = len = ordered_words[0].length,\n        lcv = 0;\n    while (curr === len) {\n        longest.push(ordered_words[lcv]);\n        curr = ordered_words[++lcv].length;\n    };\n    print(longest.sort().join(', ') + '\\n');\n});","var http = require('http');\nhttp.get({\n    host: 'www.puzzlers.org',\n    path: '/pub/wordlists/unixdict.txt'\n}, function(res) {\n    var data = '';\n    res.on('data', function(chunk) {\n        data += chunk;\n    });\n    res.on('end', function() {\n        var words = data.split('\\n');\n        var max = 0;\n        var ordered = [];\n        words.forEach(function(word) {\n            if (word.split('').sort().join('') != word) return;\n            if (word.length == max) {\n                ordered.push(word);\n            } else if (word.length > max) {\n                ordered = [word];\n                max = word.length;\n            }\n        });\n        console.log(ordered.join(', '));\n    });\n});"],"uncertainCodeArray":[],"textArray":[]}