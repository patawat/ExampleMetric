{"isSuccess":true,"url":"http://rosettacode.org//wiki/Huffman_coding","codeArray":["function HuffmanEncoding(str) {\n      this.str = str;\n      var count_chars = {};\n      for (var i = 0; i < str.length; i++) \n          if (str[i] in count_chars) \n              count_chars[str[i]] ++;\n          else \n              count_chars[str[i]] = 1;\n      var pq = new BinaryHeap(function(x){return x[0];});\n      for (var ch in count_chars) \n          pq.push([count_chars[ch], ch]);\n      while (pq.size() > 1) {\n          var pair1 = pq.pop();\n          var pair2 = pq.pop();\n          pq.push([pair1[0]+pair2[0], [pair1[1], pair2[1]]]);\n      }\n      var tree = pq.pop();\n      this.encoding = {};\n      this._generate_encoding(tree[1], \"\");\n      this.encoded_string = \"\"\n      for (var i = 0; i < this.str.length; i++) {\n          this.encoded_string += this.encoding[str[i]];\n      }\n  }\n  HuffmanEncoding.prototype._generate_encoding = function(ary, prefix) {\n      if (ary instanceof Array) {\n          this._generate_encoding(ary[0], prefix + \"0\");\n          this._generate_encoding(ary[1], prefix + \"1\");\n      }\n      else {\n          this.encoding[ary] = prefix;\n      }\n  }\n  HuffmanEncoding.prototype.inspect_encoding = function() {\n      for (var ch in this.encoding) {\n          print(\"'\" + ch + \"': \" + this.encoding[ch])\n      }\n  }\n  HuffmanEncoding.prototype.decode = function(encoded) {\n      var rev_enc = {};\n      for (var ch in this.encoding) \n          rev_enc[this.encoding[ch]] = ch;\n      var decoded = \"\";\n      var pos = 0;\n      while (pos < encoded.length) {\n          var key = \"\"\n          while (!(key in rev_enc)) {\n              key += encoded[pos];\n              pos++;\n          }\n          decoded += rev_enc[key];\n      }\n      return decoded;\n  }var s = \"this is an example for huffman encoding\";\n  print(s);\n  var huff = new HuffmanEncoding(s);\n  huff.inspect_encoding();\n  var e = huff.encoded_string;\n  print(e);\n  var t = huff.decode(e);\n  print(t);\n  print(\"is decoded string same as original? \" + (s==t));"],"uncertainCodeArray":[],"textArray":[]}