{"isSuccess":true,"url":"http://rosettacode.org//wiki/AKS_test_for_primes","codeArray":["var i, p, pascal, primerow, primes, show, _i;\n  pascal = function() {\n    var a;\n    a = [];\n    return function() {\n      var b, i;\n      if (a.length === 0) {\n        return a = [1];\n      } else {\n        b = (function() {\n          var _i, _ref, _results;\n          _results = [];\n          for (i = _i = 0, _ref = a.length - 1; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n            _results.push(a[i] + a[i + 1]);\n          }\n          return _results;\n        })();\n        return a = [1].concat(b).concat([1]);\n      }\n    };\n  };\n  show = function(a) {\n    var degree, i, sgn, show_x, str, _i, _ref;\n    show_x = function(e) {\n      switch (e) {\n        case 0:\n          return \"\";\n        case 1:\n          return \"x\";\n        default:\n          return \"x^\" + e;\n      }\n    };\n    degree = a.length - 1;\n    str = \"(x - 1)^\" + degree + \" =\";\n    sgn = 1;\n    for (i = _i = 0, _ref = a.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n      str += ' ' + (sgn > 0 ? \"+\" : \"-\") + ' ' + a[i] + show_x(degree - i);\n      sgn = -sgn;\n    }\n    return str;\n  };\n  primerow = function(row) {\n    var degree;\n    degree = row.length - 1;\n    return row.slice(1, degree).every(function(x) {\n      return x % degree === 0;\n    });\n  };\n  p = pascal();\n  for (i = _i = 0; _i <= 7; i = ++_i) {\n    console.log(show(p()));\n  }\n  p = pascal();\n  p();\n  p();\n  primes = (function() {\n    var _j, _results;\n    _results = [];\n    for (i = _j = 1; _j <= 49; i = ++_j) {\n      if (primerow(p())) {\n        _results.push(i + 1);\n      }\n    }\n    return _results;\n  })();\n  console.log(\"\");\n  console.log(\"The primes upto 50 are: \" + primes);function pascal(n) {\n  \tvar cs = []; if (n) while (n--) coef(); return coef\n  \tfunction coef() {\n  \t\tif (cs.length === 0) return cs = [1];\n  \t\tfor (var t=[1,1], i=cs.length-1; i; i-=1) t.splice( 1, 0, cs[i-1]+cs[i] ); return cs = t\n  \t}\n  }\n  function show(cs) {\n  \tfor (var s='', sgn=true, i=0, deg=cs.length-1; i<=deg; sgn=!sgn, i+=1) {\n  \t\ts += ' ' + (sgn ? '+' : '-') + cs[i] + (e => e==0 ? '' : e==1 ? 'x' : 'x<sup>' + e + '</sup>')(deg-i)\n  \t}\n  \treturn '(x-1)<sup>' + deg + '</sup> =' + s;\n  }\n  function isPrime(cs) {\n  \tvar deg=cs.length-1; return cs.slice(1, deg).every( function(c) { return c % deg === 0 } )\n  }\n  var coef=pascal(); for (var i=0; i<=7; i+=1) document.write(show(coef()), '<br>')\n  document.write('<br>Primes: ');\n  for (var coef=pascal(2), n=2; n<=50; n+=1) if (isPrime(coef())) document.write(' ', n)function coef(n) {\n   \tfor (var c=[1], i=0; i<n; c[0]=-c[0], i+=1) {\n  \t\tc[i+1]=1; for (var j=i; j; j-=1) c[j] = c[j-1]-c[j]\t\t\n  \t}\n  \treturn c\n  }\n  function show(cs)\t{\n  \tvar s='', n=cs.length-1\n  \tdo s += (cs[n]>0 ? ' +' : ' ') + cs[n] + (n==0 ? '' : n==1 ? 'x' :'x<sup>'+n+'</sup>'); while (n--)\n  \treturn s\n  }\n  function isPrime(n) {\n  \tvar cs=coef(n), i=n-1; while (i-- && cs[i]%n == 0);\n  \treturn i < 1\n  }\n  for (var n=0; n<=7; n++) document.write('(x-1)<sup>',n,'</sup> = ', show(coef(n)), '<br>')\n  document.write('<br>Primes: ');\n  for (var n=2; n<=50; n++) if (isPrime(n)) document.write(' ', n)"],"uncertainCodeArray":[],"textArray":[]}