{"isSuccess":true,"url":"http://rosettacode.org//wiki/Currying","codeArray":[" function addN(n) {\n     var curry = function(x) {\n         return x + n;\n     };\n     return curry;\n }\n add2 = addN(2);\n alert(add2);\n alert(add2(7));","(a, b) => expr_using_a_and_b","a => b => expr_using_a_and_b","let\n    fix = // This is a variant of the Applicative order Y combinator\n    f => (f => f(f))(g => f((...a) => g(g)(...a))),\n    curry =\n    f => (\n        fix(\n            z => (n, ...a) => (\n                n > 0 ?\n                b => z(n - 1, ...a, b) :\n                f(...a)))\n        (f.length)),\n    curryrest =\n    f => (\n        fix(\n            z => (n, ...a) => (\n                n > 0 ?\n                b => z(n - 1, ...a, b) :\n                (...b) => f(...a, ...b)))\n        (f.length)),\n    curriedmax = curry(Math.max),\n    curryrestedmax = curryrest(Math.max);\nprint(curriedmax(8)(4), curryrestedmax(8)(4)(), curryrestedmax(8)(4)(9, 7, 2));\n// 8,8,9"],"uncertainCodeArray":[],"textArray":[]}