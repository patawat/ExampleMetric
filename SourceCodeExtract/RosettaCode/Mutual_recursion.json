{"isSuccess":true,"url":"http://rosettacode.org//wiki/Mutual_recursion","codeArray":["function f(num) {\n   return (num === 0) ? 1 : num - m(f(num - 1));\n  }\n  function m(num) {\n   return (num === 0) ? 0 : num - f(m(num - 1));\n  }\n  function range(m, n) {\n    return Array.apply(null, Array(n - m + 1)).map(\n      function (x, i) { return m + i; }\n    );\n  }\n  var a = range(0, 19);\n  //return a new array of the results and join with commas to print\n  console.log(a.map(function (n) { return f(n); }).join(', '));\n  console.log(a.map(function (n) { return m(n); }).join(', '));var f = num => (num === 0) ? 1 : num - m(f(num - 1));\n  var m = num => (num === 0) ? 0 : num - f(m(num - 1));\n  function range(m, n) {\n    return Array.apply(null, Array(n - m + 1)).map(\n      function (x, i) { return m + i; }\n    );\n  }\n  var a = range(0, 19);\n  //return a new array of the results and join with commas to print\n  console.log(a.map(n => f(n)).join(', '));\n  console.log(a.map(n => m(n)).join(', '));var range = (m, n) => Array(... Array(n - m + 1)).map((x, i) => m + i)"],"uncertainCodeArray":[],"textArray":[]}