{"isSuccess":true,"url":"http://rosettacode.org//wiki/Mutual_recursion","codeArray":["function f(num) {\n    return (num === 0) ? 1 : num - m(f(num - 1));\n}\n\nfunction m(num) {\n    return (num === 0) ? 0 : num - f(m(num - 1));\n}\n\nfunction range(m, n) {\n    return Array.apply(null, Array(n - m + 1)).map(\n        function(x, i) {\n            return m + i;\n        }\n    );\n}\nvar a = range(0, 19);\n//return a new array of the results and join with commas to print\nconsole.log(a.map(function(n) {\n    return f(n);\n}).join(', '));\nconsole.log(a.map(function(n) {\n    return m(n);\n}).join(', '));","var f = num => (num === 0) ? 1 : num - m(f(num - 1));\nvar m = num => (num === 0) ? 0 : num - f(m(num - 1));\n\nfunction range(m, n) {\n    return Array.apply(null, Array(n - m + 1)).map(\n        function(x, i) {\n            return m + i;\n        }\n    );\n}\nvar a = range(0, 19);\n//return a new array of the results and join with commas to print\nconsole.log(a.map(n => f(n)).join(', '));\nconsole.log(a.map(n => m(n)).join(', '));","var range = (m, n) => Array(...Array(n - m + 1)).map((x, i) => m + i)"],"uncertainCodeArray":[],"textArray":[]}