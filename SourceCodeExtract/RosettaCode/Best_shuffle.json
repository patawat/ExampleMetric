{"isSuccess":true,"url":"http://rosettacode.org//wiki/Best_shuffle","codeArray":["function raze(a) { // like .join('') except producing an array instead of a string\n      var r= [];\n      for (var j= 0; j<a.length; j++)\n          for (var k= 0; k<a[j].length; k++)  r.push(a[j][k]);\n      return r;\n  }\n  function shuffle(y) {\n      var len= y.length;\n      for (var j= 0; j < len; j++) {\n          var i= Math.floor(Math.random()*len);\n          var t= y[i];\n          y[i]= y[j];\n          y[j]= t;\n      }\n      return y;\n  }\n  function bestShuf(txt) {\n      var chs= txt.split('');\n      var gr= {};\n      var mx= 0;\n      for (var j= 0; j<chs.length; j++) {\n          var ch= chs[j];\n          if (null == gr[ch])  gr[ch]= [];\n          gr[ch].push(j);\n          if (mx < gr[ch].length)  mx++;\n      }\n      var inds= [];\n      for (var ch in gr)  inds.push(shuffle(gr[ch]));\n      var ndx= raze(inds);\n      var cycles= [];\n      for (var k= 0; k < mx; k++)  cycles[k]= [];\n      for (var j= 0; j<chs.length; j++)  cycles[j%mx].push(ndx[j]);\n      var ref= raze(cycles);\n      for (var k= 0; k < mx; k++)  cycles[k].push(cycles[k].shift());\n      var prm= raze(cycles);\n      var shf= [];\n      for (var j= 0; j<chs.length; j++)  shf[ref[j]]= chs[prm[j]];\n      return shf.join('');\n  }\n  function disp(ex) {\n      var r= bestShuf(ex);\n      var n= 0;\n      for (var j= 0; j<ex.length; j++)\n          n+= ex.substr(j, 1) == r.substr(j,1) ?1 :0;\n      return ex+', '+r+', ('+n+')';\n  }"],"uncertainCodeArray":[],"textArray":[]}