{"isSuccess":true,"url":"http://rosettacode.org//wiki/Luhn_test_of_credit_card_numbers","codeArray":["mod10check = function(cc) {\n    return $A(cc).reverse().map(Number).inject(0, function(s, d, i) {\n        return s + (i % 2 == 1 ? (d == 9 ? 9 : (d * 2) % 9) : d);\n    }) % 10 == 0;\n};\n['49927398716', '49927398717', '1234567812345678', '1234567812345670'].each(function(i) {\n    alert(mod10check(i))\n});","var LuhnCheck = (function() {\n    var luhnArr = [0, 2, 4, 6, 8, 1, 3, 5, 7, 9];\n    return function(str) {\n        var counter = 0;\n        var incNum;\n        var odd = false;\n        var temp = String(str).replace(/[^\\d]/g, \"\");\n        if (temp.length == 0)\n            return false;\n        for (var i = temp.length - 1; i >= 0; --i) {\n            incNum = parseInt(temp.charAt(i), 10);\n            counter += (odd = !odd) ? incNum : luhnArr[incNum];\n        }\n        return (counter % 10 == 0);\n    }\n})();","function luhn(str) {\n    return str.split('').reduceRight(function(prev, curr, idx) {\n        prev = parseInt(prev, 10);\n        if ((idx + 1) % 2 !== 0) {\n            curr = (curr * 2).toString().split('').reduce(function(p, c) {\n                return parseInt(p, 10) + parseInt(c, 10)\n            });\n        }\n        return prev + parseInt(curr, 10);\n    }) % 10 === 0;\n}","var luhn10 = function(a, b, c, d, e) {\n    for (d = +a[b = a.length - 1], e = 0; b--;)\n        c = +a[b], d += ++e % 2 ? 2 * c % 10 + (c > 4) : c;\n    return !(d % 10)\n};\n// returns true\nluhn10('4111111111111111')\n    // returns false\nluhn10('4111111111111112')"],"uncertainCodeArray":[],"textArray":[]}