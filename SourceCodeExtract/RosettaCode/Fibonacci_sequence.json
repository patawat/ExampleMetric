{"isSuccess":true,"url":"http://rosettacode.org//wiki/Fibonacci_sequence","codeArray":["function fib(n) {\n    return function(n, a, b) {\n        return n > 0 ? arguments.callee(n - 1, b, a + b) : a;\n    }(n, 0, 1);\n}"," function fib(n) {\n     var a = 0,\n         b = 1,\n         t;\n     while (n-- > 0) {\n         t = a;\n         a = b;\n         b += t;\n         console.log(a);\n     }\n     return a;\n }","var fib = (function(cache) {\n    return cache = cache || {},\n        function(n) {\n            if (cache[n]) return cache[n];\n            else return cache[n] = n == 0 ? 0 : n < 0 ? -fib(-n) :\n                n <= 2 ? 1 : fib(n - 2) + fib(n - 1);\n        };\n})();","(function() {\n    'use strict';\n\n    function fib(n) {\n        return Array.apply(null, Array(n + 1))\n            .map(function(_, i, lst) {\n                return lst[i] = (\n                    i ? i < 2 ? 1 :\n                    lst[i - 2] + lst[i - 1] :\n                    0\n                );\n            })[n];\n    }\n    return fib(32);\n})();","function Y(dn) {\n    return (function(fn) {\n        return fn(fn);\n    }(function(fn) {\n        return dn(function() {\n            return fn(fn).apply(null, arguments);\n        });\n    }));\n}\nvar fib = Y(function(fn) {\n    return function(n) {\n        if (n === 0 || n === 1) {\n            return n;\n        }\n        return fn(n - 1) + fn(n - 2);\n    };\n});","function* fibonacciGenerator() {\n    var prev = 0;\n    var curr = 1;\n    while (true) {\n        yield curr;\n        curr = curr + prev;\n        prev = curr - prev;\n    }\n}\nvar fib = fibonacciGenerator();"],"uncertainCodeArray":[],"textArray":[]}