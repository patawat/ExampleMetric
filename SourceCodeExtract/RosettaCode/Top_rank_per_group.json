{"isSuccess":true,"url":"http://rosettacode.org//wiki/Top_rank_per_group","codeArray":["var data = [{\n    name: \"Tyler Bennett\",\n    id: \"E10297\",\n    salary: 32000,\n    dept: \"D101\"\n}, {\n    name: \"John Rappl\",\n    id: \"E21437\",\n    salary: 47000,\n    dept: \"D050\"\n}, {\n    name: \"George Woltman\",\n    id: \"E00127\",\n    salary: 53500,\n    dept: \"D101\"\n}, {\n    name: \"Adam Smith\",\n    id: \"E63535\",\n    salary: 18000,\n    dept: \"D202\"\n}, {\n    name: \"Claire Buckman\",\n    id: \"E39876\",\n    salary: 27800,\n    dept: \"D202\"\n}, {\n    name: \"David McClellan\",\n    id: \"E04242\",\n    salary: 41500,\n    dept: \"D101\"\n}, {\n    name: \"Rich Holcomb\",\n    id: \"E01234\",\n    salary: 49500,\n    dept: \"D202\"\n}, {\n    name: \"Nathan Adams\",\n    id: \"E41298\",\n    salary: 21900,\n    dept: \"D050\"\n}, {\n    name: \"Richard Potter\",\n    id: \"E43128\",\n    salary: 15900,\n    dept: \"D101\"\n}, {\n    name: \"David Motsinger\",\n    id: \"E27002\",\n    salary: 19250,\n    dept: \"D202\"\n}, {\n    name: \"Tim Sampair\",\n    id: \"E03033\",\n    salary: 27000,\n    dept: \"D101\"\n}, {\n    name: \"Kim Arlich\",\n    id: \"E10001\",\n    salary: 57000,\n    dept: \"D190\"\n}, {\n    name: \"Timothy Grove\",\n    id: \"E16398\",\n    salary: 29900,\n    dept: \"D190\"\n}, ];\n\nfunction top_rank(n) {\n    var by_dept = group_by_dept(data);\n    for (var dept in by_dept) {\n        output(dept);\n        for (var i = 0; i < n && i < by_dept[dept].length; i++) {\n            var emp = by_dept[dept][i];\n            output(emp.name + \", id=\" + emp.id + \", salary=\" + emp.salary);\n        }\n        output(\"\");\n    }\n}\n// group by dept, and sort by salary\nfunction group_by_dept(data) {\n    var by_dept = {};\n    for (var idx in data) {\n        var dept = data[idx].dept;\n        if (!has_property(by_dept, dept)) {\n            by_dept[dept] = new Array();\n        }\n        by_dept[dept].push(data[idx]);\n    }\n    for (var dept in by_dept) {\n        // numeric sort\n        by_dept[dept].sort(function(a, b) {\n            return b.salary - a.salary\n        });\n    }\n    return by_dept;\n}\n\nfunction has_property(obj, propname) {\n    return typeof(obj[propname]) != \"undefined\";\n}\n\nfunction output(str) {\n    try {\n        WScript.Echo(str); // WSH\n    } catch (err) {\n        print(str); // Rhino\n    }\n}\ntop_rank(3);"," var collectDept = function(arrOfObj) {\n     var collect = arrOfObj.reduce(function(rtnObj, obj) {\n         if (rtnObj[obj.dept] === undefined) {\n             rtnObj[obj.dept] = [];\n         }\n         rtnObj[obj.dept].push(obj);\n         return rtnObj;\n     }, {});\n     return Object.keys(collect).map(function(key) {\n         return collect[key];\n     });\n };\n var sortSalary = function(arrOfSalaryArrs) {\n     return arrOfSalaryArrs.map(function(item) {\n         return item.sort(function(a, b) {\n             if (a.salary > b.salary) {\n                 return -1;\n             }\n             if (a.salary < b.salary) {\n                 return 1;\n             }\n             return 0;\n         });\n     });\n };\n var getNTopSalariesByDept = function(n, data) {\n     if (n < 0) {\n         return;\n     }\n     return sortSalary(collectDept(data)).map(function(list) {\n         return list.slice(0, n);\n     });\n };"],"uncertainCodeArray":[],"textArray":[]}