{"isSuccess":true,"url":"http://rosettacode.org//wiki/Power_set","codeArray":["public array\nfunction powerset(required array data) {\n    var ps = [\"\"];\n    var d = arguments.data;\n    var lenData = arrayLen(d);\n    var lenPS = 0;\n    for (var i = 1; i LTE lenData; i++) {\n        lenPS = arrayLen(ps);\n        for (var j = 1; j LTE lenPS; j++) {\n            arrayAppend(ps, listAppend(ps[j], d[i]));\n        }\n    }\n    return ps;\n}\nvar res = powerset([1, 2, 3, 4]);","function powerset(ary) {\n    var ps = [\n        []\n    ];\n    for (var i = 0; i < ary.length; i++) {\n        for (var j = 0, len = ps.length; j < len; j++) {\n            ps.push(ps[j].concat(ary[i]));\n        }\n    }\n    return ps;\n}\nvar res = powerset([1, 2, 3, 4]);\nload('json2.js');\nprint(JSON.stringify(res));","(function() {\n    // translating:  powerset = foldr (\\x acc -> acc ++ map (x:) acc) [[]]\n    function powerset(xs) {\n        return xs.reduceRight(function(a, x) {\n            return a.concat(a.map(function(y) {\n                return [x].concat(y);\n            }));\n        }, [\n            []\n        ]);\n    }\n    // TEST\n    return {\n        '[1,2,3] ->': powerset([1, 2, 3]),\n        'empty set ->': powerset([]),\n        'set which contains only the empty set ->': powerset([\n            []\n        ])\n    }\n})();","{\n    \"[1,2,3] ->\": [\n        [],\n        [3],\n        [2],\n        [2, 3],\n        [1],\n        [1, 3],\n        [1, 2],\n        [1, 2, 3]\n    ],\n    \"empty set ->\": [\n        []\n    ],\n    \"set which contains only the empty set ->\": [\n        [],\n        [\n            []\n        ]\n    ]\n}"],"uncertainCodeArray":[],"textArray":[]}