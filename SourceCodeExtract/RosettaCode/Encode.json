{"isSuccess":true,"url":"http://rosettacode.org//wiki/Roman_numerals/Encode","codeArray":["var roman = {\n      map: [\n          1000, 'M', 900, 'CM', 500, 'D', 400, 'CD', 100, 'C', 90, 'XC',\n          50, 'L', 40, 'XL', 10, 'X', 9, 'IX', 5, 'V', 4, 'IV', 1, 'I',\n      ],\n      int_to_roman: function(n) {\n          var value = '';\n          for (var idx = 0; n > 0 && idx < this.map.length; idx += 2) {\n              while (n >= this.map[idx]) {\n                  value += this.map[idx + 1];\n                  n -= this.map[idx];\n              }\n          }\n          return value;\n      }\n  }\n  roman.int_to_roman(1999); // \"MCMXCIX\"(function () {\n      'use strict';\n      // If the Roman is a string, pass any delimiters through\n      // (Int | String) -> String\n      function romanTranscription(a) {\n          if (typeof a === 'string') {\n              var ps = a.split(/\\d+/),\n                  dlm = ps.length > 1 ? ps[1] : undefined;\n              return (dlm ? a.split(dlm)\n                      .map(function (x) {\n                          return Number(x);\n                      }) : [a])\n                  .map(roman)\n                  .join(dlm);\n          } else return roman(a);\n      }\n      // romanÂ :: Int -> String\n      function roman(n) {\n          return [[1000, \"M\"], [900, \"CM\"], [500, \"D\"], [400, \"CD\"], [100,\n          \"C\"], [90, \"XC\"], [50, \"L\"], [40, \"XL\"], [10, \"X\"], [9,\n          \"IX\"], [5, \"V\"], [4, \"IV\"], [1, \"I\"]]\n              .reduce(function (a, lstPair) {\n                  var m = a.remainder,\n                      v = lstPair[0];\n                  return (v > m ? a : {\n                      remainder: m % v,\n                      roman: a.roman + Array(\n                              Math.floor(m / v) + 1\n                          )\n                          .join(lstPair[1])\n                  });\n              }, {\n                  remainder: n,\n                  roman: ''\n              }).roman;   \n      }\n      // TEST\n      return [2016, 1990, 2008, \"14.09.2015\", 2000, 1666].map(\n          romanTranscription);\n  })();"],"uncertainCodeArray":[],"textArray":[]}