{"isSuccess":true,"url":"http://rosettacode.org//wiki/Morse_code","codeArray":[" var globalAudioContext = new webkitAudioContext();\n\n function morsecode(text, unit, freq) {\n     'use strict';\n     // defaults\n     unit = unit ? unit : 0.05;\n     freq = freq ? freq : 700;\n     var cont = globalAudioContext;\n     var time = cont.currentTime;\n     // morsecode\n     var code = {\n         a: '._',\n         b: '_...',\n         c: '_._.',\n         d: '_..',\n         e: '.',\n         f: '.._.',\n         g: '__.',\n         h: '....',\n         i: '..',\n         j: '.___',\n         k: '_._',\n         l: '._..',\n         m: '__',\n         n: '_.',\n         o: '___',\n         p: '.__.',\n         q: '__._',\n         r: '._.',\n         s: '...',\n         t: '_',\n         u: '.._',\n         v: '..._',\n         w: '.__',\n         x: '_.._',\n         y: '_.__',\n         z: '__..',\n         0: '_____',\n         1: '.____',\n         2: '..___',\n         3: '...__',\n         4: '...._',\n         5: '.....',\n         6: '_....',\n         7: '__...',\n         8: '___..',\n         9: '____.'\n     };\n     // generate code for text\n     function makecode(data) {\n         for (var i = 0; i <= data.length; i++) {\n             var codedata = data.substr(i, 1).toLowerCase();\n             codedata = code[codedata];\n             // recognised character\n             if (codedata !== undefined) {\n                 maketime(codedata);\n             }\n             // unrecognised character\n             else {\n                 time += unit * 7;\n             }\n         }\n     }\n     // generate time for code\n     function maketime(data) {\n         for (var i = 0; i <= data.length; i++) {\n             var timedata = data.substr(i, 1);\n             timedata = (timedata === '.') ? 1 : (timedata === '_') ? 3 : 0;\n             timedata *= unit;\n             if (timedata > 0) {\n                 maketone(timedata);\n                 time += timedata;\n                 // tone gap\n                 time += unit * 1;\n             }\n         }\n         // char gap\n         time += unit * 2;\n     }\n     // generate tone for time\n     function maketone(data) {\n         var start = time;\n         var stop = time + data;\n         // filter: envelope the tone slightly\n         gain.gain.linearRampToValueAtTime(0, start);\n         gain.gain.linearRampToValueAtTime(1, start + (unit / 8));\n         gain.gain.linearRampToValueAtTime(1, stop - (unit / 16));\n         gain.gain.linearRampToValueAtTime(0, stop);\n     }\n     // create: oscillator, gain, destination\n     var osci = cont.createOscillator();\n     osci.frequency.value = freq;\n     var gain = cont.createGainNode();\n     gain.gain.value = 0;\n     var dest = cont.destination;\n     // connect: oscillator -> gain -> destination\n     osci.connect(gain);\n     gain.connect(dest);\n     // start oscillator\n     osci.start(time);\n     // begin encoding: text -> code -> time -> tone\n     makecode(text);\n     // return web audio context for reuse / control\n     return cont;\n }"," morsecode('Hello World');"],"uncertainCodeArray":[],"textArray":[]}