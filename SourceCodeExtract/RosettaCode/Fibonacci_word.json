{"isSuccess":true,"url":"http://rosettacode.org//wiki/Fibonacci_word","codeArray":["//makes outputting a table possible in environments \n  //that don't support console.table() \n  function console_table(xs) {\n      function pad(n,s) {\n          var res = s;\n          for (var i = s.length; i < n; i++)\n              res += \" \";\n          return res;\n      }\n      if (xs.length === 0)\n          console.log(\"No data\");\n      else {\n          var widths = [];\n          var cells = [];\n          for (var i = 0; i <= xs.length; i++)\n              cells.push([]);\n          for (var s in xs[0]) {\n              var len = s.length;\n              cells[0].push(s);\n              for (var i = 0; i < xs.length; i++) {\n                  var ss = \"\" + xs[i][s];\n                  len = Math.max(len, ss.length);\n                  cells[i+1].push(ss);\n              }\n              widths.push(len);\n          }\n          var s = \"\";\n          for (var x = 0; x < cells.length; x++) {\n              for (var y = 0; y < widths.length; y++)\n                  s += \"|\" + pad(widths[y], cells[x][y]);\n              s += \"|\\n\";\n          }\n          console.log(s);\n      }\n  }\n  //returns the entropy of a string as a number \n  function entropy(s) {\n       //create an object containing each individual char\n  \t//and the amount of iterations per char \n      function prob(s) {\n          var h = Object.create(null);\n          s.split('').forEach(function(c) {\n             h[c] && h[c]++ || (h[c] = 1); \n          });\n          return h;\n      }\n      s = s.toString(); //just in case \n      var e = 0, l = s.length, h = prob(s);\n      for (var i in h ) {\n          var p = h[i]/l;\n          e -= p * Math.log(p) / Math.log(2);\n      }\n      return e;\n  }\n  //creates Fibonacci Word to n as described on Rosetta Code\n  //see rosettacode.org/wiki/Fibonacci_word\n  function fibWord(n) {\n      var wOne = \"1\", wTwo = \"0\", wNth = [wOne, wTwo], w = \"\", o = [];\n      for (var i = 0; i < n; i++) {\n          if (i === 0 || i === 1) {\n              w = wNth[i];\n          } else {\n              w = wNth[i - 1] + wNth[i - 2];\n              wNth.push(w);\n          }\n          var l = w.length;\n          var e = entropy(w);\n          if (l <= 21) {\n          \to.push({\n              \tN: i + 1,\n              \tLength: l,\n              \tEntropy: e,\n              \tWord: w\n          \t});\n          } else {\n          \to.push({\n              \tN: i + 1,\n              \tLength: l,\n              \tEntropy: e,\n              \tWord: \"...\"\n          \t});\n          }            \n      }\n      try {\n      \tconsole.table(o);\n      } catch (err) {\n      \tconsole_table(o);\n      }\n  }\n  fibWord(37);"],"uncertainCodeArray":[],"textArray":[]}