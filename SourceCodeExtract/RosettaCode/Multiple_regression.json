{"isSuccess":true,"url":"http://rosettacode.org//wiki/Multiple_regression","codeArray":["// modifies the matrix \"in place\"\n  Matrix.prototype.inverse = function() {\n      if (this.height != this.width) {\n          throw \"can't invert a non-square matrix\";\n      }   \n      var I = new IdentityMatrix(this.height);\n      for (var i = 0; i < this.height; i++) \n          this.mtx[i] = this.mtx[i].concat(I.mtx[i])\n      this.width *= 2;\n      this.toReducedRowEchelonForm();\n      for (var i = 0; i < this.height; i++) \n          this.mtx[i].splice(0, this.height);\n      this.width /= 2;\n      return this;\n  }\n  function ColumnVector(ary) {\n      return new Matrix(ary.map(function(v) {return [v]}))\n  }\n  ColumnVector.prototype = Matrix.prototype\n  Matrix.prototype.regression_coefficients = function(x) {\n      var x_t = x.transpose();\n      return x_t.mult(x).inverse().mult(x_t).mult(this);\n  }\n  // the Ruby example\n  var y = new ColumnVector([1,2,3,4,5]);\n  var x = new ColumnVector([2,1,3,4,5]);\n  print(y.regression_coefficients(x));\n  print();\n  // the Tcl example\n  y = new ColumnVector([\n      52.21, 53.12, 54.48, 55.84, 57.20, 58.57, 59.93, 61.29, \n      63.11, 64.47, 66.28, 68.10, 69.92, 72.19, 74.46\n  ]);\n  x = new Matrix(\n      [1.47,1.50,1.52,1.55,1.57,1.60,1.63,1.65,1.68,1.70,1.73,1.75,1.78,1.80,1.83].map(\n          function(v) {return [Math.pow(v,0), Math.pow(v,1), Math.pow(v,2)]}\n      )\n  );\n  print(y.regression_coefficients(x));"],"uncertainCodeArray":[],"textArray":[]}