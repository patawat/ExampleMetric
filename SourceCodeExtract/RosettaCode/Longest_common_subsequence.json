{"isSuccess":true,"url":"http://rosettacode.org//wiki/Longest_common_subsequence","codeArray":["function lcs(a, b) {\n    var aSub = a.substr(0, a.length - 1);\n    var bSub = b.substr(0, b.length - 1);\n    if (a.length === 0 || b.length === 0) {\n      return '';\n    } else if (a.charAt(a.length - 1) === b.charAt(b.length - 1)) {\n      return lcs(aSub, bSub) + a.charAt(a.length - 1);\n    } else {\n      var x = lcs(a, bSub);\n      var y = lcs(aSub, b);\n      return (x.length > y.length) ? x : y;\n    }\n  }Â \n  var longest = (xs, ys) => (xs.length > ys.length) ? xs : ys;\n  var lcs = (xx, yy) => {\n    if (!xx.length || !yy.length) { return ''; }\n    var x = xx[0],\n        y = yy[0];\n    xs = xx.slice(1);\n    ys = yy.slice(1);\n    return (x === y) ? lcs(xs, ys) :\n                       longest(lcs(xx, ys), lcs(xs, yy));\n  };function lcs(x,y){\n  \tvar s,i,j,m,n,\n  \t\tlcs=[],row=[],c=[],\n  \t\tleft,diag,latch;\n  \t//make sure shorter string is the column string\n  \tif(m<n){s=x;x=y;y=s;}\n  \tm = x.length;\n  \tn = y.length;\n  \t//build the c-table\n  \tfor(j=0;j<n;row[j++]=0);\n  \tfor(i=0;i<m;i++){\n  \t\tc[i] = row = row.slice();\n  \t\tfor(diag=0,j=0;j<n;j++,diag=latch){\n  \t\t\tlatch=row[j];\n  \t\t\tif(x[i] == y[j]){row[j] = diag+1;}\n  \t\t\telse{\n  \t\t\t\tleft = row[j-1]||0;\n  \t\t\t\tif(left>row[j]){row[j] = left;}\n  \t\t\t}\n  \t\t}\n  \t}\n  \ti--,j--;\n  \t//row[j] now contains the length of the lcs\n  \t//recover the lcs from the table\n  \twhile(i>-1&&j>-1){\n  \t\tswitch(c[i][j]){\n  \t\t\tdefault: j--;\n  \t\t\t\tlcs.unshift(x[i]);\n  \t\t\tcase (i&&c[i-1][j]): i--;\n  \t\t\t\tcontinue;\n  \t\t\tcase (j&&c[i][j-1]): j--;\n  \t\t}\n  \t}\n  \treturn lcs.join('');\n  }\tvar t=i;\n  \twhile(i>-1&&j>-1){\n  \t\tswitch(c[i][j]){\n  \t\t\tdefault:i--,j--;\n  \t\t\t\tcontinue;\n  \t\t\tcase (i&&c[i-1][j]):\n  \t\t\t\tif(t!==i){lcs.unshift(x.substring(i+1,t+1));}\n  \t\t\t\tt=--i;\n  \t\t\t\tcontinue;\n  \t\t\tcase (j&&c[i][j-1]): j--;\n  \t\t\t\tif(t!==i){lcs.unshift(x.substring(i+1,t+1));}\n  \t\t\t\tt=i;\n  \t\t}\n  \t}\n  \tif(t!==i){lcs.unshift(x.substring(i+1,t+1));}function lcs_greedy(x,y){\n    var p1, i, idx,\n        symbols = {},\n        r = 0,\n        p = 0,\n        l = 0,\n        m = x.length,\n        n = y.length,\n        s = new Buffer((m < n) ? n : m);\n    p1 = popsym(0);\n    for (i = 0; i < m; i++) {\n      p = (r === p) ? p1 : popsym(i);\n      p1 = popsym(i + 1);\n      if (p > p1) {\n        i += 1;\n        idx = p1;\n      } else {\n        idx = p;\n      }\n      if (idx === n) {\n        p = popsym(i);\n      } else {\n        r = idx;\n        s[l] = x.charCodeAt(i);\n        l += 1;\n      }\n    }\n    return s.toString('utf8', 0, l);\n    function popsym(index) {\n      var s = x[index],\n          pos = symbols[s] + 1;\n      pos = y.indexOf(s, ((pos > r) ? pos : r));\n      if (pos === -1) { pos = n; }\n      symbols[s] = pos;\n      return pos;\n    }\n  }lcs_greedy('bcaaaade', 'deaaaabc'); // 'bc' instead of 'aaaa'"],"uncertainCodeArray":[],"textArray":[]}