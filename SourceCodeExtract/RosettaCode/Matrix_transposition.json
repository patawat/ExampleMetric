{"isSuccess":true,"url":"http://rosettacode.org//wiki/Matrix_transposition","codeArray":["function Matrix(ary) {\n      this.mtx = ary\n      this.height = ary.length;\n      this.width = ary[0].length;\n  }\n  Matrix.prototype.toString = function() {\n      var s = []\n      for (var i = 0; i < this.mtx.length; i++) \n          s.push( this.mtx[i].join(\",\") );\n      return s.join(\"\\n\");\n  }\n  // returns a new matrix\n  Matrix.prototype.transpose = function() {\n      var transposed = [];\n      for (var i = 0; i < this.width; i++) {\n          transposed[i] = [];\n          for (var j = 0; j < this.height; j++) {\n              transposed[i][j] = this.mtx[j][i];\n          }\n      }\n      return new Matrix(transposed);\n  }\n  var m = new Matrix([[1,1,1,1],[2,4,8,16],[3,9,27,81],[4,16,64,256],[5,25,125,625]]);\n  print(m);\n  print();\n  print(m.transpose());Â \n  (function () {\n      'use strict';\n      function transpose(lst) {\n          return lst[0].map(function (_, iCol) {\n              return lst.map(function (row) {\n                  return row[iCol];\n              })\n          });\n      }\n      return transpose(\n          [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]]\n      );\n  })();"],"uncertainCodeArray":[],"textArray":[]}