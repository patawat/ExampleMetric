{"isSuccess":true,"url":"http://rosettacode.org//wiki/Sorting_algorithms/Comb_sort","codeArray":["   // Node 5.4.1 tested implementation (ES6)\n    function is_array_sorted(arr) {\n        var sorted = true;\n        for (var i = 0; i < arr.length - 1; i++) {\n            if (arr[i] > arr[i + 1]) {\n                sorted = false;\n                break;\n            }\n        }\n        return sorted;\n    }\n    // Array to sort\n    var arr = [4, 9, 0, 3, 1, 5];\n    var iteration_count = 0;\n    var gap = arr.length - 2;\n    var decrease_factor = 1.25;\n    // Until array is not sorted, repeat iterations\n    while (!is_array_sorted(arr)) {\n        // If not first gap\n        if (iteration_count > 0)\n        // Calculate gap\n            gap = (gap == 1) ? gap : Math.floor(gap / decrease_factor);\n        // Set front and back elements and increment to a gap\n        var front = 0;\n        var back = gap;\n        while (back <= arr.length - 1) {\n            // If elements are not ordered swap them\n            if (arr[front] > arr[back]) {\n                var temp = arr[front];\n                arr[front] = arr[back];\n                arr[back] = temp;\n            }\n            // Increment and re-run swapping\n            front += 1;\n            back += 1;\n        }\n        iteration_count += 1;\n    }\n    // Print the sorted array\n    console.log(arr);\n  }"],"uncertainCodeArray":[],"textArray":[]}