{"isSuccess":true,"url":"http://rosettacode.org//wiki/Loop_over_multiple_arrays_simultaneously","codeArray":["var a = [\"a\",\"b\",\"c\"],\n      b = [\"A\",\"B\",\"C\"],\n      c = [1,2,3],\n      output = \"\",\n      i;\n  for (i = 0; i < a.length; i += 1) {\n      output += a[i] + b[i] + c[i] + \"\\n\";\n  }var lstOut = ['', '', ''];\n  [[\"a\", \"b\", \"c\"], [\"A\", \"B\", \"C\"], [\"1\", \"2\", \"3\"]].forEach(\n    function (a) {\n      [0, 1, 2].forEach(\n        function (i) {\n          // side-effect on an array outside the function\n          lstOut[i] += a[i];\n        }\n      );\n    }\n  );\n  // lstOut --> [\"aA1\", \"bB2\", \"cC3\"](function (lstArrays) {\n      return lstArrays.reduce(\n          function (a, e) {\n              return [\n                  a[0] + e[0],\n                  a[1] + e[1],\n                  a[2] + e[2]\n              ];\n          }, ['', '', ''] // initial copy of the accumulator\n      ).join('\\n');\n  })([\n      [\"a\", \"b\", \"c\"],\n      [\"A\", \"B\", \"C\"],\n      [\"1\", \"2\", \"3\"]\n  ]);(function (x, y, z) {\n      // function of arity 3 mapped over nth items of each of 3 lists\n      // (a -> b -> c -> d) -> [a] -> [b] -> [c] -> [d]\n      function zipWith3(f, xs, ys, zs) {\n          return zs.length ? [f(xs[0], ys[0], zs[0])].concat(\n              zipWith3(f, xs.slice(1), ys.slice(1), zs.slice(1))) : [];\n      }\n      function concat(x, y, z) {\n          return ''.concat(x, y, z);\n      }\n      return zipWith3(concat, x, y, z).join('\\n')\n  })([\"a\", \"b\", \"c\"], [\"A\", \"B\", \"C\"], [1, 2, 3]);(function (lists) {\n      // [[a]] -> [[a]]\n      function zip(lists) {\n          var lng = lists.length,\n              lstHead = lng ? [].concat.apply([], lists.map(function (lst) {\n                  return lst.length ? [lst[0]] : [];\n              })) : [];\n          return lstHead.length === lng ? [lstHead].concat(\n              zip(lists.map(function (x) {\n                  return x.slice(1);\n              }))\n          ) : [];\n      }\n      // [a] -> s\n      function concat(lst) {\n          return ''.concat.apply('', lst);\n      }\n      return zip(lists).map(concat).join('\\n')\n  })([[\"a\", \"b\", \"c\"], [\"A\", \"B\", \"C\"], [1, 2, 3]]);aA1\n  bB2\n  cC3"],"uncertainCodeArray":[],"textArray":[]}