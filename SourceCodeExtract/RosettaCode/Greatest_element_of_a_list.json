{"isSuccess":true,"url":"http://rosettacode.org//wiki/Greatest_element_of_a_list","codeArray":["Math.max.apply(null, [ 0, 1, 2, 5, 4 ]); // 5(function () {\n      // (a -> a -> Ordering) -> [a] -> a \n      function maximumBy(f, xs) {\n          return xs.reduce(function (a, x) {\n              return a === undefined ? x : (\n                  f(x, a) > 0 ? x : a\n              );\n          }, undefined);\n      }\n      // COMPARISON FUNCTIONS FOR SPECIFIC DATA TYPES\n      //Ordering: (LT|EQ|GT)\n      //  GT: 1 (or other positive n)\n      //  EQ: 0\n      //  LT: -1 (or other negative n) \n      function wordSortFirst(a, b) {\n          return a < b ? 1 : (a > b ? -1 : 0)\n      }\n      function wordSortLast(a, b) {\n          return a < b ? -1 : (a > b ? 1 : 0)\n      }\n      function wordLongest(a, b) {\n          return a.length - b.length;\n      }\n      function cityPopulationMost(a, b) {\n          return a.population - b.population;\n      }\n      function cityPopulationLeast(a, b) {\n          return b.population - a.population;\n      }\n      function cityNameSortFirst(a, b) {\n          var strA = a.name,\n              strB = b.name;\n          return strA < strB ? 1 : (strA > strB ? -1 : 0);\n      }\n      function cityNameSortLast(a, b) {\n          var strA = a.name,\n              strB = b.name;\n          return strA < strB ? -1 : (strA > strB ? 1 : 0);\n      }\n      var lstWords = [\n              'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta',\n              'theta', 'iota', 'kappa', 'lambda'\n          ];\n      var lstCities = [\n          {\n              name: 'Shanghai',\n              population: 24.15\n              }, {\n              name: 'Karachi',\n              population: 23.5\n              }, {\n              name: 'Beijing',\n              population: 21.5\n              }, {\n              name: 'Tianjin',\n              population: 14.7\n              }, {\n              name: 'Istanbul',\n              population: 14.4\n              }, , {\n              name: 'Lagos',\n              population: 13.4\n              }, , {\n              name: 'Tokyo',\n              population: 13.3\n              }\n          ];\n      return [\n          maximumBy(wordSortFirst, lstWords),\n          maximumBy(wordSortLast, lstWords),\n          maximumBy(wordLongest, lstWords),\n          maximumBy(cityPopulationMost, lstCities),\n          maximumBy(cityPopulationLeast, lstCities),\n          maximumBy(cityNameSortFirst, lstCities),\n          maximumBy(cityNameSortLast, lstCities)\n      ]\n  })();[\n    \"alpha\",\n    \"zeta\",\n    \"epsilon\",\n    {\n      \"name\": \"Shanghai\",\n      \"population\": 24.15\n    },\n    {\n      \"name\": \"Tokyo\",\n      \"population\": 13.3\n    },\n    {\n      \"name\": \"Beijing\",\n      \"population\": 21.5\n    },\n    {\n      \"name\": \"Tokyo\",\n      \"population\": 13.3\n    }\n  ]Math.max(...[ 0, 1, 2, 5, 4 ]); // 5"],"uncertainCodeArray":[],"textArray":[]}