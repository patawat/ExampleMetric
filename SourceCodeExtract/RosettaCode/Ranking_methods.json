{"isSuccess":true,"url":"http://rosettacode.org//wiki/Ranking_methods","codeArray":["(function() {\n    var xs = 'Solomon Jason Errol Garry Bernard Barry Stephen'.split(' '),\n        ns = [44, 42, 42, 41, 41, 41, 39],\n        sorted = xs.map(function(x, i) {\n            return {\n                name: x,\n                score: ns[i]\n            };\n        }).sort(function(a, b) {\n            var c = b.score - a.score;\n            return c ? c : a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n        }),\n        names = sorted.map(function(x) {\n            return x.name;\n        }),\n        scores = sorted.map(function(x) {\n            return x.score;\n        }),\n        reversed = scores.slice(0).reverse(),\n        unique = scores.filter(function(x, i) {\n            return scores.indexOf(x) === i;\n        });\n    // RANKINGS AS FUNCTIONS OF SCORES: SORTED, REVERSED AND UNIQUE\n    var rankings = function(score, index) {\n            return {\n                name: names[index],\n                score: score,\n                Ordinal: index + 1,\n                Standard: function(n) {\n                    return scores.indexOf(n) + 1;\n                }(score),\n                Modified: function(n) {\n                    return reversed.length - reversed.indexOf(n);\n                }(score),\n                Dense: function(n) {\n                    return unique.indexOf(n) + 1;\n                }(score),\n                Fractional: function(n) {\n                    return (\n                        (scores.indexOf(n) + 1) +\n                        (reversed.length - reversed.indexOf(n))\n                    ) / 2;\n                }(score)\n            };\n        },\n        tbl = [\n            'Name Score Standard Modified Dense Ordinal Fractional'.split(' ')\n        ].concat(scores.map(rankings).reduce(function(a, x) {\n            return a.concat([\n                [x.name, x.score,\n                    x.Standard, x.Modified, x.Dense, x.Ordinal, x.Fractional\n                ]\n            ]);\n        }, [])),\n        //[[a]] -> bool -> s -> s\n        wikiTable = function(lstRows, blnHeaderRow, strStyle) {\n            return '{| class=\"wikitable\" ' + (\n                strStyle ? 'style=\"' + strStyle + '\"' : ''\n            ) + lstRows.map(function(lstRow, iRow) {\n                var strDelim = ((blnHeaderRow && !iRow) ? '!' : '|');\n                return '\\n|-\\n' + strDelim + ' ' + lstRow.map(function(v) {\n                    return typeof v === 'undefined' ? ' ' : v;\n                }).join(' ' + strDelim + strDelim + ' ');\n            }).join('') + '\\n|}';\n        };\n    return wikiTable(tbl, true, 'text-align:center');\n})();"],"uncertainCodeArray":[],"textArray":[]}