{"isSuccess":true,"url":"http://rosettacode.org//wiki/N-queens_problem","codeArray":[" function queenPuzzle(rows, columns) {\n     if (rows <= 0) {\n         return [\n             []\n         ];\n     } else {\n         return addQueen(rows - 1, columns);\n     }\n }\n\n function addQueen(newRow, columns, prevSolution) {\n     var newSolutions = [];\n     var prev = queenPuzzle(newRow, columns);\n     for (var i = 0; i < prev.length; i++) {\n         var solution = prev[i];\n         for (var newColumn = 0; newColumn < columns; newColumn++) {\n             if (!hasConflict(newRow, newColumn, solution))\n                 newSolutions.push(solution.concat([newColumn]))\n         }\n     }\n     return newSolutions;\n }\n\n function hasConflict(newRow, newColumn, solution) {\n     for (var i = 0; i < newRow; i++) {\n         if (solution[i] == newColumn ||\n             solution[i] + i == newColumn + newRow ||\n             solution[i] - i == newColumn - newRow) {\n             return true;\n         }\n     }\n     return false;\n }\n console.log(queenPuzzle(8, 8));"],"uncertainCodeArray":[],"textArray":[]}