{"isSuccess":true,"url":"http://rosettacode.org//wiki/Using_the_Meetup.com_API","codeArray":["var fs = require('fs');\n  var request = require('request');\n  var meetup = function() {\n    var key = fs.readFileSync('api_key.txt', 'utf-8');\n    var url = \"https://api.meetup.com\";\n    var composeURL = function(root, object) {\n      return root + '?' + JSON.stringify(object).replace(/\":\"/g, '=').replace(/\",\"/g, '&').slice(2, -2)\n    }\n    var get = function(params, callback, path) {\n      params.key = key;\n      request.get(composeURL(url + (path || '/2/open_events'), params), function(err, res, body) {\n        if ( err ) {\n          console.error(err);\n          return false;\n        }\n        callback(JSON.parse(body)['results']);\n      })\n    }\n    var post = function(details, callback, path) {\n      details.key = key;\n      request.post({\n        headers: { 'content-type' : 'application/x-www-form-urlencoded' },\n        url: url + (path || '/2/event'),\n        form: details\n      }, function(err, res, body) {\n        callback(body);\n      })\n    }\n    var parseEvent = function(mEvent) {\n      /*\n       * A simple function that converts JSON to \n       * string in a pretty way\n      **/\n      var name = mEvent['name'] || '';\n      var desc = mEvent['desc'] || '';\n      var url = mEvent['url'] || '';\n      if ( mEvent['venue'] ) {\n        var city = mEvent['venue']['city'] || '';\n        var lat = mEvent['venue']['lat'] || '';\n        var lon = mEvent['venue']['lon'] || '';\n      }\n      if ( mEvent['group'] )\n        var group = mEvent['group']['name'] || '';\n      var parsed = '';\n      if ( name ) parsed += 'Name: ' + name + '\\n';\n      if ( desc ) parsed += 'Description: ' + desc + '\\n';\n      if ( url ) parsed += 'Url: ' + url + '\\n';\n      if ( city ) parsed += 'City: ' + city + '\\n';\n      if ( lat ) parsed += 'Latitude: ' + lat + '\\n';\n      if ( lon ) parsed += 'Longitude: ' + lon + '\\n';\n      if ( group ) parsed += 'Group: ' + group + '\\n';\n      return parsed;\n    };\n    var parseEvents = function(results) {\n      console.log('a');\n      for ( var i = 0; i < results.length; i++ ) {\n        console.log( parseEvent(results[i]) );\n      }\n    }\n    return {\n      get: get,\n      parseEvents: parseEvents,\n      post: post\n    }\n  }\n  meetup().get({\n    // More Info: http://www.meetup.com/meetup_api/docs/2/open_events/\n    topic: 'photo',\n    city: 'nyc'\n  }, function(results) {\n    meetup().parseEvents(results);\n  });\n  /*\n   * Getting group ID and group urlname\n   *\n   * The URL name is simply the part after meetup.com/ on a meetup group.\n   * Example, ID of meetup.com/foodie-programmers is 'foodie-programmers'.\n   *\n   * Running the code below with the group name will give the group ID, an integer.\n  meetup().get({\n    'group_urlname': 'foodie-programmers'\n  }, function(group) {\n    console.log(group.id);\n  }, '/2/groups');\n   * Using the above group_id and the group_urlname manually, \n   * you can post events to a group with the below code\n  **/\n  meetup().post({\n    // More Info: http://www.meetup.com/meetup_api/docs/:urlname/venues/#create\n    name: 'Finding Nemo',\n    address_1: 'p sherman 42 wallaby way sydney',\n    city: 'sydney',\n    country: 'australia',\n    // state: needed if in US or CA.\n  }, function(venue) {\n    console.log('Venue: ', venue, venue.id); \n    // Prints a venue ID that can be used to create a event\n  }, '/' + '{{ foodie-programmers }}' + '/venues'); \n  // This needs a valid urlname for the group\n  meetup().post({\n    // More Info: http://www.meetup.com/meetup_api/docs/2/groups/\n    group_id: 42, // Group ID goes here\n    group_urlname: 'foodie-programmers',\n    name: 'Tomato Python Fest',\n    description: 'Code vegetables in Python! Special speech by Guido Van Ossum',\n    duration: 1000 * 60 * 60 * 2, // Duration in milliseconds\n    time: 1419879086343, // Milliseconds since epoch\n    why: 'We should do this because... Less than 250 characters',\n    hosts: 'up to 5 comma separated member ids',\n    venue_id: 42, // Integer, ID of venue. Venue can be created with the above.\n    lat: 42, // Latitude, Integer\n    lon: 42, // Longitude, Integer\n    simple_html_description: 'Event description in <b>simple html</b>. Less than <i>50000</i> characters.'\n  }, function(result) {\n    console.log('Event: ', result);\n  })"],"uncertainCodeArray":[],"textArray":[]}